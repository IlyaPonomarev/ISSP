#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

// Формирует представление серии
//
// Параметры:
//  ПараметрыСерии - 
//  ЗначенияРеквизитов - 
//
// Возвращаемое значение:
//  Строка
//
Функция ПредставлениеСерии(ПараметрыСерий, ЗначенияРеквизитов) Экспорт
	
	Представление = "";
	Если ЗначениеЗаполнено(ПараметрыСерий.ШаблонРабочегоНаименованияСерии) Тогда
		
		Представление = КонструкторФормул.НаименованиеПоШаблону(ПараметрыСерий.ШаблонРабочегоНаименованияСерии, ЗначенияРеквизитов);
		
	Иначе
		
		Если ПараметрыСерий.ИспользоватьНомерСерии = Истина Тогда
			Представление = ЗначенияРеквизитов.КодГрифа + ЗначенияРеквизитов.КодДО + ЗначенияРеквизитов.КодГода + ЗначенияРеквизитов.КодЦентра + ЗначенияРеквизитов.УчетныйНомер + ?(ЗначениеЗаполнено(ЗначенияРеквизитов.НомерМСИ), " (" + ЗначенияРеквизитов.НомерМСИ + ")", "") + ?(ЗначениеЗаполнено(ЗначенияРеквизитов.ЗаводскойНомер), " [" + ЗначенияРеквизитов.ЗаводскойНомер + "]", "");
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// Возвращает описание блокируемых реквизитов
//
// Возвращаемое значение:
//  Массив - имена блокируемых реквизитов
//   Элемент массива - Строка в формате:
//     ИмяРеквизита[;ИмяЭлементаФормы,...]
//      где
//       ИмяРеквизита     - имя реквизита объекта
//       ИмяЭлементаФормы - имя элемента формы, связанного с реквизитом
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	БлокируемыеРеквизиты = Новый Массив;
	
	БлокируемыеРеквизиты.Добавить("КодГода");
	БлокируемыеРеквизиты.Добавить("КодЦентра");
	БлокируемыеРеквизиты.Добавить("КодДО");
	БлокируемыеРеквизиты.Добавить("КодГрифа");
	БлокируемыеРеквизиты.Добавить("УчетныйНомер");
	БлокируемыеРеквизиты.Добавить("ЗаводскойНомер");
	БлокируемыеРеквизиты.Добавить("НомерМСИ");
	
	Возврат БлокируемыеРеквизиты;
	
КонецФункции

// Возвращает имена реквизитов, которые не должны отображаться в списке реквизитов обработки ГрупповоеИзменениеОбъектов
//
//	Возвращаемое значение:
//		Массив - массив имен реквизитов
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	НеРедактируемыеРеквизиты.Добавить("КодГода");
	НеРедактируемыеРеквизиты.Добавить("КодЦентра");
	НеРедактируемыеРеквизиты.Добавить("КодДО");
	НеРедактируемыеРеквизиты.Добавить("КодГрифа");
	НеРедактируемыеРеквизиты.Добавить("УчетныйНомер");
	НеРедактируемыеРеквизиты.Добавить("ЗаводскойНомер");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

#КонецОбласти // СтандартныеПодсистемы

#КонецЕсли

#Область Поиск

////////////////////////////////////////////////////////////////////////////////
// Расширенный поиск в списках
Функция ОбластиПоиска(ПолнотекстовыйПоиск) Экспорт
	
	ОбластиПоиска = Новый Массив;
	ОбластиПоиска.Добавить(Метаданные.Справочники.СерииНоменклатуры);
	
	Возврат ОбластиПоиска;
	
КонецФункции

Функция ТекстЗапросаПоискаПоОбласти(ОбластьПоиска) Экспорт
	
	Если ОбластьПоиска = Метаданные.Справочники.ПартииНоменклатуры Тогда
		Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ %МаксимальноеКоличество%
		|	СерииНоменклатуры.Ссылка КАК Значение,
		|	""СерииНоменклатуры"" КАК Метаданные
		|ИЗ
		|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|ГДЕ
		|	СерииНоменклатуры.Наименование %ВидСравнения% &СтрокаПоиска %Спецсимвол%
		|";
	КонецЕсли;
		
	Возврат Неопределено;
	
КонецФункции

Функция ОбработатьНайденныеДанные(НайденныеДанные) Экспорт
	
	РезультатПоиска = Новый Структура;
	РезультатПоиска.Вставить("СерииНоменклатуры", Новый Массив);
	
	Для Каждого Элемент Из НайденныеДанные Цикл
		Если ТипЗнч(Элемент.Метаданные) = Тип("ОбъектМетаданных") Тогда
			
			Если Элемент.Метаданные = Метаданные.Справочники.СерииНоменклатуры Тогда
				РезультатПоиска.СерииНоменклатуры.Добавить(Элемент.Значение);
			Иначе
				ВызватьИсключение НСтр("ru = 'Неизвестная ошибка'");
			КонецЕсли;
			
		Иначе
			
			Если Элемент.Метаданные = "СерииНоменклатуры" Тогда
				РезультатПоиска.СерииНоменклатуры.Добавить(Элемент.Значение);
			Иначе
				ВызватьИсключение НСтр("ru = 'Неизвестная ошибка'");
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат РезультатПоиска.Партии;
	
КонецФункции

#КонецОбласти // Поиск