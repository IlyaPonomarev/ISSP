
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Отбор = "2"; // По умолчанию показываем все позиции, которые могут быть сопоставлены
	Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
	
	Если Параметры.Свойство("Отбор") Тогда
		
		Если Параметры.Отбор.Свойство("Владелец") Тогда
			Контрагент = Параметры.Отбор.Владелец;
		КонецЕсли;
		
		Если Параметры.Отбор.Свойство("Номенклатура") И ЗначениеЗаполнено(Параметры.Отбор.Номенклатура) Тогда
			
			Номенклатура = Параметры.Отбор.Номенклатура;
			Параметры.Отбор.Удалить("Номенклатура");
			
			Если Параметры.Отбор.Свойство("ЕдиницаИзмерения") Тогда
				
				ЕдиницаИзмерения = Параметры.Отбор.ЕдиницаИзмерения;
				Параметры.Отбор.Удалить("ЕдиницаИзмерения");
				
			КонецЕсли;
			
		Иначе
			
			Параметры.Отбор.Удалить("Номенклатура");
			Параметры.Отбор.Удалить("ЕдиницаИзмерения");
			
		КонецЕсли;
	
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("НоменклатураОтбор"    , Номенклатура);
	Список.Параметры.УстановитьЗначениеПараметра("ЕдиницаИзмеренияОтбор", ЕдиницаИзмерения);
	
	Подсказка1 = НСтр("ru='Номенклатура поставщика не сопоставлена с номенклатурой'");
	Подсказка2 = НСтр("ru='Номенклатура поставщика сопоставлена с другой номенклатурой'");
	Подсказка3 = НСтр("ru='Номенклатура поставщика сопоставлена с номенклатурой'");
	
	Список.Параметры.УстановитьЗначениеПараметра("Подсказка1", Подсказка1);
	Список.Параметры.УстановитьЗначениеПараметра("Подсказка2", Подсказка2);
	Список.Параметры.УстановитьЗначениеПараметра("Подсказка3", Подсказка3);
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		
		ПредставлениеНоменклатуры = Строка(Номенклатура) + ?(ЗначениеЗаполнено(ЕдиницаИзмерения), ", " + ЕдиницаИзмерения, "");
		
		ПредставлениеЭлемента = НСтр("ru='Все позиции, которые могут быть сопоставлены с ""%ПредставлениеНоменклатуры%""'");
		ПредставлениеЭлемента = СтрЗаменить(ПредставлениеЭлемента, "%ПредставлениеНоменклатуры%", ПредставлениеНоменклатуры);
		НовыйЭлемент = Элементы.Отбор.СписокВыбора.Добавить("2", ПредставлениеЭлемента);
		
		ПредставлениеЭлемента = НСтр("ru='Все позиции, которые сопоставлены с ""%ПредставлениеНоменклатуры%""'");
		ПредставлениеЭлемента = СтрЗаменить(ПредставлениеЭлемента, "%ПредставлениеНоменклатуры%", ПредставлениеНоменклатуры);
		Элементы.Отбор.СписокВыбора.Добавить("1", ПредставлениеЭлемента);
		
		Элементы.Отбор.СписокВыбора.Добавить("", НСтр("ru='Все позиции'"));
		
		УстановитьОтборПоСопоставленнойНоменклатуре(Отбор = "2");
		
	Иначе
		
		Элементы.Отбор.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Отбор) Тогда
		УстановитьОтборПоСопоставленнойНоменклатуре(Отбор = "2");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПризнакВариантаОтбора1", , ВидСравненияКомпоновкиДанных.Равно,, Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПризнакВариантаОтбора2", , ВидСравненияКомпоновкиДанных.Равно,, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Если Группа Тогда
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Владелец", Контрагент);
		
		ОткрытьФорму(
			"Справочник.НоменклатураПоставщиков.ФормаГруппы",
			Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения));
		
	Иначе
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Владелец"        , Контрагент);
		ЗначенияЗаполнения.Вставить("Номенклатура"    , Номенклатура);
		ЗначенияЗаполнения.Вставить("ЕдиницаИзмерения", ЕдиницаИзмерения);
		ОткрытьФорму(
			"Справочник.НоменклатураПоставщиков.ФормаОбъекта",
			Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборПоСопоставленнойНоменклатуре(ПоказыватьНесопоставленные = Ложь)
	
	Если ПоказыватьНесопоставленные Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПризнакВариантаОтбора1", Истина, ВидСравненияКомпоновкиДанных.Равно,, Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПризнакВариантаОтбора2", , ВидСравненияКомпоновкиДанных.Равно,, Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПризнакВариантаОтбора1", , ВидСравненияКомпоновкиДанных.Равно,, Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПризнакВариантаОтбора2", Истина, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
