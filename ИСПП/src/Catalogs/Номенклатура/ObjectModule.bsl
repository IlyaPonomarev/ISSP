#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ТипЗначения = ТипЗнч(ДанныеЗаполнения);
	Если ТипЗначения = Тип("Структура") Тогда
		ЗаполнитьПоДаннымЗаполнения(ДанныеЗаполнения);
	КонецЕсли;
	
	Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ФайлКартинки = Неопределено;
	
	Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если ЗначениеЗаполнено(Вес) Тогда
		ПроверяемыеРеквизиты.Добавить("ВесЕдиницаИзмерения");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если ЭтоНовый()
	   И Не ЗначениеЗаполнено(Код) Тогда
		УстановитьНовыйКод();
	КонецЕсли;
	
	КодДляПоиска = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Код, Истина);
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоНовый() Тогда
		
		ЗапрашиваемыеРеквизиты = Новый Структура;
		ЗапрашиваемыеРеквизиты.Вставить("ЕдиницаИзмерения");
		ЗапрашиваемыеРеквизиты.Вставить("ВидНоменклатуры");
		СтарыеЗначения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, ЗапрашиваемыеРеквизиты);
		
		Если ВидНоменклатуры <> СтарыеЗначения.ВидНоменклатуры Тогда
			Если Не ДополнительныеСвойства.Свойство("СменаВидаНоменклатурыОтработана") Тогда
				Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(ЭтотОбъект, Отказ, Истина);
				
			Иначе
				// Если проверку и заполнение по виду уже делали, то просто выдадим предупреждения, если что не так,
				// но не будем мешать записывать
				ЕстьОшибка = Ложь;
				Справочники.Номенклатура.ПроверитьКорректностьСменыВидаНоменклатуры(ЭтотОбъект, СтарыеЗначения.ВидНоменклатуры, ЕстьОшибка);
				
				Если ЕстьОшибка Тогда
					ДополнительныеСвойства.Вставить("ЕстьПроблемаСоСменойВидаНоменклатуры");
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Справочники.Номенклатура.ОтработатьЛогикуСвязиРеквизитов(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Наименование) Тогда
		ТекстИсключения = НСтр("ru = 'Поле ""Рабочее наименование"" не заполнено'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если Не ЭтоНовый() Тогда		
		Если ЕдиницаИзмерения <> СтарыеЗначения.ЕдиницаИзмерения Тогда
			ДополнительныеСвойства.Вставить("ЗаполнитьЕдиницыИзмерения");
		КонецЕсли;
	Иначе
		ДополнительныеСвойства.Вставить("ЗаполнитьЕдиницыИзмерения");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	Если ДополнительныеСвойства.Свойство("ЗаполнитьЕдиницыИзмерения") Тогда
		РегистрыСведений.ЕдиницыИзмеренияНоменклатуры.ЗаполнитьЕдиницыИзмерения(Ссылка);
	КонецЕсли;
	
	Если Не Отказ
	   И ДополнительныеСвойства.Свойство("ЕстьПроблемаСоСменойВидаНоменклатуры") Тогда
		ТекстСообщения = НСтр("ru = 'Запись элемента выполнена, но есть проблемы, связанные с изменением вида номенклатуры.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "
	//|ВЫБРАТЬ
	//|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	//|ИЗ
	//|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	//|ГДЕ
	//|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	//|";
	//
	//Запрос.УстановитьПараметр("Номенклатура", Ссылка);
	
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	НаборЗаписей = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьНаборЗаписей();
	//	НаборЗаписей.Отбор.Штрихкод.Значение = Выборка.Штрихкод;
	//	НаборЗаписей.Отбор.Штрихкод.Использование = Истина;
	//	НаборЗаписей.Записать();
	//КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДаннымЗаполнения(ДанныеЗаполнения)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли