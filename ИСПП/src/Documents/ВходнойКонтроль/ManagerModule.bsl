#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	УправлениеПечатьюПоддержкаПроектов.ДобавитьКомандыПечати(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыПечати);
	
КонецПроцедуры

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, НастройкиФормы) Экспорт
	
	МенюОтчетыПоддержкаПроектов.ДобавитьОбщиеКоманды(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыОтчетов, НастройкиФормы);

КонецПроцедуры	

Функция ДоступныеПечатныеФормы() Экспорт
	
	ПечатныеФормы = УправлениеПечатьюПоддержкаПроектов.СоздатьКоллекциюДоступныхПечатныхФорм();
	
	МетаданныеДокумента = ПустаяСсылка().Метаданные();
	МенеджерПечати      = МетаданныеДокумента.ПолноеИмя();
	МетаданныеМакетов   = МетаданныеДокумента.Макеты;
	
	ПечатнаяФорма = УправлениеПечатьюПоддержкаПроектов.ДобавитьПечатнуюФорму(ПечатныеФормы, "АктПоВК", МенеджерПечати);
	ПечатнаяФорма.Представление = МетаданныеМакетов.ПФ_MXL_АктПоВК.Представление();
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормПоддержкаПроектов.ПутьКМакету(МетаданныеМакетов.ПФ_MXL_АктПоВК);
	УправлениеПечатьюПоддержкаПроектов.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	ПечатнаяФорма = УправлениеПечатьюПоддержкаПроектов.ДобавитьПечатнуюФорму(ПечатныеФормы, "ПротоколВК", МенеджерПечати);
	ПечатнаяФорма.Представление = МетаданныеМакетов.ПФ_MXL_ПротоколВК.Представление();
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормПоддержкаПроектов.ПутьКМакету(МетаданныеМакетов.ПФ_MXL_ПротоколВК);
	УправлениеПечатьюПоддержкаПроектов.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	//ПечатнаяФорма = УправлениеПечатьюПоддержкаПроектов.ДобавитьПечатнуюФорму(ПечатныеФормы, "АктВскрытия", МенеджерПечати);
	//ПечатнаяФорма.Представление = МетаданныеМакетов.ПФ_MXL_АктВскрытия.Представление();
	//ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормПоддержкаПроектов.ПутьКМакету(МетаданныеМакетов.ПФ_MXL_АктВскрытия);
	//УправлениеПечатьюПоддержкаПроектов.ДобавитьКомандуПечати(ПечатнаяФорма);

	
	Возврат ПечатныеФормы;
	
КонецФункции	

Функция ПечатьАктПоВК(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПФ_MXL_АктПоВК";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВходнойКонтроль.ПФ_MXL_АктПоВК");
	
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	ДанныеДляПечати = ПолучитьДанныеДляПечатиАктВК(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	Шапка = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Шапка.Следующий() Цикл
				
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим общие реквизиты шапки
		ОбластьШапка = Макет.ПолучитьОбласть("Заголовок");

		ТабДокумент.Вывести(ОбластьШапка);
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		
		ИтогоКоличество  = 0;
		НомерСтроки = 0;
		
		// Выводим многострочную часть документа
		ОбластьСтрока           = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ОбластьИтого          = Макет.ПолучитьОбласть("Итого");
		ОбластьПодвал           = Макет.ПолучитьОбласть("Подвал");
		
		ВыборкаПоДокументам.Сбросить();
		ПараметрыПоиска = Новый Структура("Документ", Шапка.Ссылка);
		Если ВыборкаПоДокументам.НайтиСледующий(ПараметрыПоиска) Тогда
			ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();
			
			КоличествоСтрок = ВыборкаСтрокТовары.Количество();
			
			Пока ВыборкаСтрокТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ОбластьСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
				
				Если НомерСтроки = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьИтого);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
				КонецЕсли;
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДокумент.Вывести(ЗаголовокТаблицы);
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьСтрока);
				
				ИтогоКоличество  = ИтогоКоличество  + ВыборкаСтрокТовары.Количество;
			КонецЦикла;
		КонецЕсли;
		
		
		// Выводим итоги по документу в целом
		ОбластьИтого.Параметры.ИтогоКоличество = ИтогоКоличество;
		
		ТабДокумент.Вывести(ОбластьИтого);
		
		// Выводим подвал документа
		ТабДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьДанныеДляПечатиАктВК(МассивОбъектов, ПараметрыПечати = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеДляПечатиАктВК();
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);;
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("РезультатПоШапке"          , РезультатыЗапросов[0]);
	ДанныеДляПечати.Вставить("РезультатПоТабличнойЧасти" , РезультатыЗапросов[1]);
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ТекстЗапросаДанныеДляПечатиАктВК()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Документ.Ссылка КАК Ссылка,
	               |	Документ.Номер КАК НомерДокумента,
	               |	Документ.Дата КАК ДатаДокумента,
	               |	Документ.Организация КАК Организация,
	               |	Документ.Склад КАК Склад,
	               |	Документ.ПроектЗадания КАК ПроектЗадания,
	               |	Документ.Ответственный КАК Ответственный,
	               |	Документ.Комментарий КАК Комментарий,
	               |	Документ.УполномоченнаяОрганизация КАК УполномоченнаяОрганизация,
	               |	Документ.Договор КАК Договор,
	               |	Документ.ДокументОснование КАК ДокументОснование
	               |ИЗ
	               |	Документ.ВходнойКонтроль КАК Документ
	               |ГДЕ
	               |	Документ.Ссылка В(&ТекущийДокумент)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Товары.Ссылка КАК Документ,
	               |	Товары.НомерСтроки КАК НомерСтроки,
	               |	Товары.Номенклатура КАК Номенклатура,
	               |	Товары.НомерПоПеречню КАК НомерПоПеречню,
	               |	Товары.Результат КАК Результат,
	               |	Товары.Количество КАК Количество,
	               |	Товары.СерияНоменклатуры КАК СерияНоменклатуры,
	               |	Товары.Выборка КАК Выборка
	               |ИЗ
	               |	Документ.ВходнойКонтроль.Товары КАК Товары
	               |ГДЕ
	               |	Товары.Ссылка В(&ТекущийДокумент)
	               |ИТОГИ ПО
	               |	Документ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПечатьПротоколВК(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПФ_MXL_ПротоколВК";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВходнойКонтроль.ПФ_MXL_ПротоколВК");
	
	ДанныеДляПечати = ПолучитьДанныеДляПечатиПротоколВК(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	ДанныеПоДокументу = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	
	Пока ДанныеПоДокументу.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь; 
		
		ОбластьПротокол = Макет.ПолучитьОбласть("ОбластьДокумент");
		ОбластьПротокол.Параметры.Заполнить(ДанныеПоДокументу);
		
		ТабДокумент.Вывести(ОбластьПротокол);
		
	КонецЦикла;	
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьДанныеДляПечатиПротоколВК(МассивОбъектов, ПараметрыПечати = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеДляПечатиПротоколВК();
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);;
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("РезультатПоШапке"          , РезультатыЗапросов[0]);
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ТекстЗапросаДанныеДляПечатиПротоколВК()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВходнойКонтрольТовары.Ссылка КАК Ссылка,
	               |	ВходнойКонтрольТовары.Номенклатура КАК Номенклатура,
	               |	ВходнойКонтрольТовары.НомерПоПеречню КАК НомерПоПеречню,
	               |	ВходнойКонтрольТовары.Количество КАК Количество,
	               |	ВходнойКонтрольТовары.Выборка КАК Выборка,
	               |	ВходнойКонтрольТовары.ДатаКонтроля КАК ДатаКонтроля,
	               |	ВходнойКонтрольТовары.НомерСтроки КАК НомерСтроки
	               |ИЗ
	               |	Документ.ВходнойКонтроль.Товары КАК ВходнойКонтрольТовары
	               |ГДЕ
	               |	ВходнойКонтрольТовары.НаПечать
	               |	И ВходнойКонтрольТовары.Ссылка В(&ТекущийДокумент)";
	
	Возврат ТекстЗапроса;
	
КонецФункции   

// Имена реквизитов, от значений которых зависят параметры учета номенклатуры
//
// Возвращаемое значение:
//   Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУчетаНоменклатуры() Экспорт
	
	Возврат "Склад";
	
КонецФункции

// Возвращает параметры учета для номенклатуры, указанной в документе
//
// Параметры
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
// Возвращаемое значение
//   Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУчетаНоменклатуры
//
Функция ПараметрыУчетаНоменклатуры(Объект) Экспорт
	
	ПараметрыУчета = ЗапасыСервер.ПараметрыУчетаНоменклатуры();
	ПараметрыУчета.ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	
	ПараметрыУчетаНаСкладе = СкладыСервер.ПараметрыУчетаНоменклатуры(Объект.Склад);
	ПараметрыУчета.ИспользоватьСерии = ПараметрыУчетаНаСкладе.ИспользоватьСерииНоменклатуры;
	ПараметрыУчета.ИспользоватьПартии = ПараметрыУчетаНаСкладе.ИспользоватьПартии;
	ПараметрыУчета.Склад = Объект.Склад;
	
	Возврат ПараметрыУчета;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания параметров учета номенклатуры
//
// Параметры
//   ПараметрыУчетаНоменклатуры - Структура - состав полей задается в функции ЗапасыСервер.ПараметрыУчетаНоменклатуры
//
// Возвращаемое значение
//   Строка - текст запроса
//
Функция ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры) Экспорт
	
	Возврат ЗапасыСервер.ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры);
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные для проведения документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицыДвиженийДляПроведения(ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ОсновныеДанныеДокумента = ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства);
	
	ПроведениеПоддержкаПроектов.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаТаблицаВходнойКонтроль(), Метаданные.РегистрыНакопления.ИсполнениеЗаявокПредприятий);
	
	Запрос = Новый Запрос(ПроведениеПоддержкаПроектов.ПолучитьТекстЗапросаДвижений(ДополнительныеСвойства, Регистры));
	
	Для Каждого ДанныеДокумента Из ОсновныеДанныеДокумента Цикл
		Запрос.УстановитьПараметр(ДанныеДокумента.Ключ, ДанныеДокумента.Значение);
	КонецЦикла;
	
	ПроведениеПоддержкаПроектов.ЗаполнитьТаблицыДвижений(ДополнительныеСвойства, Запрос.ВыполнитьПакет(), Регистры);
	
КонецПроцедуры

Функция ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства)
	
	ЗапрашиваемыеДанные = Новый Структура;
	ЗапрашиваемыеДанные.Вставить("Ссылка");
	ЗапрашиваемыеДанные.Вставить("Период", "Дата");
	ЗапрашиваемыеДанные.Вставить("Организация");
	ЗапрашиваемыеДанные.Вставить("ПроектЗадания");	
	
	ОсновныеДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПроведениеПоддержкаПроектов.ПолучитьСсылкуНаДокументДляПроведения(ДополнительныеСвойства),
		ЗапрашиваемыеДанные);
	
	Возврат ОсновныеДанныеДокумента;
	
КонецФункции 

Функция ТекстЗапросаТаблицаВходнойКонтроль()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВходнойКонтрольТовары.Партия.ДокументОприходования.ЗаказПоставщику КАК СпецификацияКДоговору,
	               |	ВходнойКонтрольТовары.Ссылка.Склад КАК Предприятие,
	               |	ВходнойКонтрольТовары.Номенклатура КАК Номенклатура,
	               |	ВходнойКонтрольТовары.Количество КАК Количество,
	               |	ЗНАЧЕНИЕ(Перечисление.ТипОперацииИсполненияЗаявкиПредприятия.ВходнойКонтроль) КАК ТипОперации,
	               |	&Период КАК Период,
	               |	ВходнойКонтрольТовары.СерияНоменклатуры КАК СерияНоменклатуры
	               |ИЗ
	               |	Документ.ВходнойКонтроль.Товары КАК ВходнойКонтрольТовары
	               |ГДЕ
	               |	ВходнойКонтрольТовары.Ссылка = &Ссылка
	               |	И ВходнойКонтрольТовары.Партия.ДокументОприходования ССЫЛКА Документ.ПоступлениеТоваров
	               |	И ВходнойКонтрольТовары.Партия.ДокументОприходования.ЗаказПоставщику <> ЗНАЧЕНИЕ(Документ.СпецификацияКДоговору.ПустаяСсылка)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВходнойКонтрольТовары.Партия.ДокументОприходования.ЗаказПоставщику,
	               |	ВходнойКонтрольТовары.Ссылка.Склад,
	               |	ВходнойКонтрольТовары.Номенклатура,
	               |	ВходнойКонтрольТовары.КоличествоБрак,
	               |	ЗНАЧЕНИЕ(Перечисление.ТипОперацииИсполненияЗаявкиПредприятия.ВходнойКонтрольНеПройден),
	               |	&Период,
	               |	ВходнойКонтрольТовары.СерияНоменклатуры
	               |ИЗ
	               |	Документ.ВходнойКонтроль.Товары КАК ВходнойКонтрольТовары
	               |ГДЕ
	               |	ВходнойКонтрольТовары.Ссылка = &Ссылка
	               |	И ВходнойКонтрольТовары.Партия.ДокументОприходования ССЫЛКА Документ.ПоступлениеТоваров
	               |	И ВходнойКонтрольТовары.Партия.ДокументОприходования.ЗаказПоставщику <> ЗНАЧЕНИЕ(Документ.СпецификацияКДоговору.ПустаяСсылка)
	               |	И ВходнойКонтрольТовары.КоличествоБрак > 0";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПечатьАктВскрытия(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	
	ПолноеИмяМакета = ФормированиеПечатныхФормПоддержкаПроектов.ПутьКМакету(ПустаяСсылка().Метаданные().Макеты.ПФ_MXL_АктВскрытия);
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПолноеИмяМакета;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПолноеИмяМакета);
	
	МассивВыводимыхОбластей = Новый Массив();
	
	ДанныеДляПечати = ПолучитьДанныеДляПечатиАктВскрытия(МассивОбъектов);
	
	Шапка = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Для Экз = 1 По 4 Цикл
			
			Если Не Экз = 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(Шапка.Ссылка, ТабличныйДокумент, Макет);
			
			// Получение параметров для заполнения
			ПараметрыИзШапки = ПолучитьПараметрыШапкиАктВскрытия(Шапка);
			ПараметрыИзШапки.Вставить("Экземпляр", Экз);
			
			// Вывод области Шапка
			ФормированиеПечатныхФормПоддержкаПроектов.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Шапка", ПараметрыИзШапки);
			
			ВыборкаПоДокументам.Сбросить();
			ПараметрыПоиска = Новый Структура("Документ", Шапка.Ссылка);
			Если ВыборкаПоДокументам.НайтиСледующий(ПараметрыПоиска) Тогда
				ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();
				
				КоличествоСтрок = ВыборкаСтрокТовары.Количество();
				
				НомерСтроки = 0;
				Количество = 0;
				Пока ВыборкаСтрокТовары.Следующий() Цикл
					//Для Каждого ВыборкаСтрокТовары Из ВыгрузкаСтрокТовары Цикл
					
					НомерСтроки = НомерСтроки + 1;
					Количество = Количество + ВыборкаСтрокТовары.Количество;
					ДанныеСтроки = Новый Структура("НомерПП, Номенклатура, Производитель, Серия, Количество, Основание", НомерСтроки, ВыборкаСтрокТовары.Номенклатура, ВыборкаСтрокТовары.Номенклатура.Производитель, ВыборкаСтрокТовары.СерияНоменклатуры, ВыборкаСтрокТовары.Количество, ВыборкаСтрокТовары.Основание);
					ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
					ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
					
					Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, МассивВыводимыхОбластей) Тогда
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					// Вывод области Строка
					ТабличныйДокумент.Вывести(ОбластьСтрока);
					
					//КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			ПараметрыИзШапки.Вставить("КоличествоУпаковок", КоличествоСтрок);
			ПараметрыИзШапки.Вставить("Количество", Количество);
			
			// Вывод области Подписи
			ФормированиеПечатныхФормПоддержкаПроектов.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Подвал", ПараметрыИзШапки);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ТекстЗапросаДанныеДляПечатиАктВскрытия()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Документ.Ссылка КАК Ссылка,
	               |	Документ.Номер КАК НомерДокумента,
	               |	Документ.Дата КАК ДатаДокумента,
	               |	Документ.Организация КАК Организация,
	               |	Документ.Склад КАК Склад,
	               |	Документ.Склад.Представление КАК СкладПредставление,
	               |	Документ.Гриф КАК Гриф
	               |ИЗ
	               |	Документ.ВходнойКонтроль КАК Документ
	               |ГДЕ
	               |	Документ.Ссылка В(&ТекущийДокумент)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Товары.Ссылка КАК Документ,
	               |	Товары.НомерСтроки КАК НомерСтроки,
	               |	Товары.Ссылка.Организация КАК Организация,
	               |	Товары.Ссылка.Склад КАК Склад,
	               |	Товары.Номенклатура КАК Номенклатура,
	               |	Товары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	               |	Товары.Номенклатура.Описание КАК Описание,
	               |	Товары.Номенклатура.Код КАК ТоварКод,
	               |	Товары.СерияНоменклатуры КАК СерияНоменклатуры,
	               |	ВЫБОР
	               |		КОГДА Товары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	               |			ТОГДА Товары.СерияНоменклатуры
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	               |	КОНЕЦ КАК СерияНоменклатурыДляСебестоимости,
	               |	Товары.Партия КАК Партия,
	               |	ВЫБОР
	               |		КОГДА Товары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	               |			ТОГДА Товары.Партия
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	               |	КОНЕЦ КАК ПартияДляСебестоимости,
	               |	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	Товары.ЕдиницаИзмерения.КодОКЕИ КАК КодПоОКЕИ,
	               |	Товары.Количество КАК Количество,
	               |	"""" КАК Основание
	               |ИЗ
	               |	Документ.ВходнойКонтроль.Товары КАК Товары
	               |ГДЕ
	               |	Товары.Ссылка В(&ТекущийДокумент)";
	
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	Запрос = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросВыбораСхемыЗапроса"));
	Запрос.УстановитьТекстЗапроса("
	|ВЫБРАТЬ
	|	СоставКомиссии.Ссылка                     КАК Документ,
	|	СоставКомиссии.НомерСтроки                КАК НомерСтроки,
	|	СоставКомиссии.ЧленКомиссии               КАК ЧленКомиссии,
	|	СоставКомиссии.ЧленКомиссии.Наименование  КАК Представление,
	|	СоставКомиссии.Председатель               КАК Председатель,
	|	СоставКомиссии.Должность                  КАК Должность
	|ИЗ
	|	Документ.УстановкаУничтожениеМСИ.СоставКомиссии КАК СоставКомиссии
	|ГДЕ
	|	СоставКомиссии.Ссылка В (&ТекущийДокумент)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Председатель УБЫВ,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Документ
	|");
	
	ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьПараметрыШапкиАктВскрытия(Шапка)
	
	СведенияОбОрганизации    = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОрганизацияПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	
	ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.ДатаДокумента);
	//МОЛ = РегистрыСведений.МатериальноОтветственныеЛица.ПолучитьДанныеОтветственного(Шапка.Склад, Шапка.ДатаДокумента);
	
	Параметры = Новый Структура();
	
	Параметры.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента));
	Параметры.Вставить("ДатаДокумента", Формат(Шапка.ДатаДокумента, "ДЛФ=Д"));
	Параметры.Вставить("НомерРасписки", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента));
	Параметры.Вставить("ДатаРасписки", Формат(Шапка.ДатаДокумента, "ДЛФ=Д"));
	Параметры.Вставить("НомерЗадания", ?(Шапка.Ссылка.ПроектЗадания = Неопределено,"",Шапка.Ссылка.ПроектЗадания.НомерПроекта));
	Параметры.Вставить("Гриф", Шапка.Ссылка.Гриф.ПолноеНаименование);
	Параметры.Вставить("РуководительФИО"         , ОтветственныеЛица.РуководительНаименование);
	Параметры.Вставить("РуководительДолжность"   , ОтветственныеЛица.РуководительДолжность);
	
	Возврат Параметры;
	
КонецФункции

Функция ПолучитьДанныеДляПечатиАктВскрытия(МассивОбъектов, ПараметрыПечати = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеДляПечатиАктВскрытия();
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	ЗапасыСервер.УстановитьСтатусыПараметровУчетаВПараметрахЗапроса(Запрос);
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("РезультатПоШапке"          , РезультатыЗапросов[РезультатыЗапросов.ВГраница() - 2]);
	ДанныеДляПечати.Вставить("РезультатПоТабличнойЧасти" , РезультатыЗапросов[РезультатыЗапросов.ВГраница() - 1]);
	ДанныеДляПечати.Вставить("РезультатПоСоставуКомиссии", РезультатыЗапросов[РезультатыЗапросов.ВГраница()]);
	
	Возврат ДанныеДляПечати;
	
КонецФункции



#КонецЕсли