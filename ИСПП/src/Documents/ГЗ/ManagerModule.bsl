#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Представление = "ГЗ № " + Данные.НомерПроекта + " от " + Формат(Данные.Дата,"ДФ=dd.MM.yyyy");
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	Поля.Добавить("НомерПроекта");
	Поля.Добавить("Дата");
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыиФункции

Процедура СформироватьТаблицыДвиженийДляПроведения(ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ОсновныеДанныеДокумента = ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства);
	

	ПроведениеПоддержкаПроектов.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаИсполнениеПроектов(), Метаданные.РегистрыНакопления.ИсполнениеПроектов);
	
	Запрос = Новый Запрос(ПроведениеПоддержкаПроектов.ПолучитьТекстЗапросаДвижений(ДополнительныеСвойства, Регистры));
	
	Для Каждого ДанныеДокумента Из ОсновныеДанныеДокумента Цикл
		Запрос.УстановитьПараметр(ДанныеДокумента.Ключ, ДанныеДокумента.Значение);
	КонецЦикла;
	
	ПроведениеПоддержкаПроектов.ЗаполнитьТаблицыДвижений(ДополнительныеСвойства, Запрос.ВыполнитьПакет(), Регистры);
	
КонецПроцедуры

Функция ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства)
	
	ЗапрашиваемыеДанные = Новый Структура;
	ЗапрашиваемыеДанные.Вставить("Ссылка");
	ЗапрашиваемыеДанные.Вставить("Организация");
	ЗапрашиваемыеДанные.Вставить("Период", "Дата");
	ЗапрашиваемыеДанные.Вставить("Валюта");
	
	ОсновныеДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПроведениеПоддержкаПроектов.ПолучитьСсылкуНаДокументДляПроведения(ДополнительныеСвойства),
		ЗапрашиваемыеДанные);
		
	СтруктураКурсаДокумента = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ОсновныеДанныеДокумента.Валюта, ОсновныеДанныеДокумента.Период);
	КоэффициентПересчетаВВалютуРегл = СтруктураКурсаДокумента.Курс / СтруктураКурсаДокумента.Кратность;
	ОсновныеДанныеДокумента.Вставить("КоэффициентПересчетаВВалютуРегл", КоэффициентПересчетаВВалютуРегл);
	
	ЗапасыСервер.ПриПодготовкеОсновныхДанныхДляПроведения(ДополнительныеСвойства, ОсновныеДанныеДокумента);
	
	Возврат ОсновныеДанныеДокумента;
	
КонецФункции

Функция ТекстЗапросаИсполнениеПроектов()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	1 КАК НомерСтроки,
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	               |	&Период КАК Период,
	               |	&Организация КАК Организация,
	               |	ПроектЗадания.Ссылка КАК ПроектЗадания,
				   |	NULL КАК Договор,
	               |	ПроектЗадания.Валюта КАК Валюта,
	               |	ПроектЗадания.СуммаВВалюте КАК Сумма
	               |ИЗ
	               |	Документ.ГЗ КАК ПроектЗадания
	               |ГДЕ
	               |	ПроектЗадания.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции


Процедура ДобавитьКомандыСоздатьНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводНаОснованииПоддержкаПроектов.ДобавитьКомандыСоздатьНаОсновании(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыСоздатьНаОсновании, НастройкиФормы);
	
КонецПроцедуры

Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, НастройкиФормы) Экспорт
	
	МенюОтчетыПоддержкаПроектов.ДобавитьОбщиеКоманды(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыОтчетов, НастройкиФормы);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	УправлениеПечатьюПоддержкаПроектов.ДобавитьКомандыПечати(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыПечати);
	
КонецПроцедуры

// Возвращает список доступных печатных форм документа
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Доступные печатные формы:
// * Идентификатор - Строка - 
// * Представление - Строка - 
// * МенеджерПечати - неопределено
// * ТипыОбъектовПечати - неопределено - 
// * Обработчик - Строка - 
// * Порядок - Число - 
// * Картинка - Картинка - 
// * СписокФорм - Строка - 
// * МестоРазмещения - Строка - 
// * ЗаголовокФормы - Строка - 
// * ФункциональныеОпции - Строка - 
// * УсловияВидимости - неопределено - 
// * ПроверкаПроведенияПередПечатью - Булево - 
// * СразуНаПринтер - Булево - 
// * ФорматСохранения - неопределено
// * ПереопределитьПользовательскиеНастройкиКоличества - Булево - 
// * ДополнитьКомплектВнешнимиПечатнымиФормами - Булево - 
// * ФиксированныйКомплект - Булево - 
// * ДополнительныеПараметры - Структура - 
// * НеВыполнятьЗаписьВФорме - Булево - 
// * ТребуетсяРасширениеРаботыСФайлами - Булево - 
// * СкрытаФункциональнымиОпциями - Булево - 
// * УникальныйИдентификатор - Строка - 
// * Отключена - Булево - 
// * ИмяКомандыНаФорме - Строка - 
// * ПутьКМакету - Строка - 
// * КомандыПечати - ТаблицаЗначений - 
// * Роли - Строка - 
// * Параметризуемая - Булево - 
Функция ДоступныеПечатныеФормы() Экспорт
	
	ПечатныеФормы = УправлениеПечатьюПоддержкаПроектов.СоздатьКоллекциюДоступныхПечатныхФорм();
		
	Возврат ПечатныеФормы;
	
КонецФункции
#КонецОбласти

#КонецЕсли