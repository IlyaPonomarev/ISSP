
&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	Режим = РежимДиалогаВыбораФайла.Открытие;
    Диалог = Новый ДиалогВыбораФайла(Режим);
    Диалог.ПолноеИмяФайла = "";
    Диалог.МножественныйВыбор = Ложь;
	Фильтр = "Таблицы, *.xls*|*.xls*";
	Диалог.Фильтр = Фильтр;
    Диалог.Заголовок = "Укажите файл для чтения";
    Если Диалог.Выбрать() Тогда
        Файл = Диалог.ВыбранныеФайлы[0];
	Иначе
		Возврат;
    КонецЕсли;
    
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.WorkBooks.Open(Файл);
		ExcelЛист = Excel.Sheets(1);
	Исключение
		Excel = Неопределено;
		Сообщить("Ошибка обработки файла!");
		Возврат;
	КонецПопытки;
	
	Попытка
		
		ТаблицаНоменклатуры.Очистить();
		Версия = Лев(Excel.Version,Найти(Excel.Version,".")-1);
		НачальнаяКолонка    = 1;
	    НачальнаяСтрока     = 2;
	    Если Версия = "8" Тогда
	        //КонечнаяКолонка = ExcelЛист.Cells.CurrentRegion.Columns.Count;
	        КонечнаяСтрока  = ExcelЛист.Cells.CurrentRegion.Rows.Count;
	    Иначе
	        //КонечнаяКолонка = ExcelЛист.Cells.SpecialCells(11).Column;
	        КонечнаяСтрока  = ExcelЛист.Cells.SpecialCells(11).Row;
		Конецесли;
		КонечнаяКолонка = 7;
		
		ДиапазонДанных = ExcelЛист.Range(ExcelЛист.Cells(НачальнаяСтрока, НачальнаяКолонка), ExcelЛист.Cells(КонечнаяСтрока, КонечнаяКолонка));
	    СтрокДиапазона = ДиапазонДанных.Rows.Count;
		
		ДиапазонДанных = ДиапазонДанных.Value;
		
		//ДиапазонДанных = ДиапазонДанных.Value.Выгрузить();
		//
		//ПолучитьТаблицуЗначенийИзДиапазонаДанных(ДиапазонДанных, НачальнаяКолонка, КонечнаяКолонка);

			
		Для НомерСтроки = 1 По СтрокДиапазона Цикл
			
			Если ДиапазонДанных.GetValue(1, НомерСтроки) = Неопределено Тогда
				Продолжить;
			КонецЕсли;	
			
			Описание = СокрЛП(ДиапазонДанных.GetValue(2, НомерСтроки));
			Наименование = СокрЛП(ДиапазонДанных.GetValue(3, НомерСтроки));
			Количество = Число(СокрЛП(ДиапазонДанных.GetValue(5, НомерСтроки)));
			Производитель = СокрЛП(ДиапазонДанных.GetValue(4, НомерСтроки));
			
			НоваяСтрока = ТаблицаНоменклатуры.Добавить();			
			НоваяСтрока.Наименование = СокрЛП(Наименование);
			НоваяСтрока.Количество = Количество;
			НоваяСтрока.Описание = Описание;
			НоваяСтрока.НаименованиеПроизводителя = Производитель;
		КонецЦикла;
		
	Исключение
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		
	КонецПопытки;
	
	Excel.WorkBooks.Close();
	Excel = Неопределено;
	
	ПодобратьНоменклатуру();
КонецПроцедуры

&НаСервере
Процедура ПолучитьТаблицуЗначенийИзДиапазонаДанных(ДиапазонДанных, НачальнаяКолонка, КонечнаяКолонка)
	
	КоличествоКолонок = КонечнаяКолонка - НачальнаяКолонка + 1;
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	
	Счетчик = 1;
	
	Пока Счетчик <= КоличествоКолонок Цикл
		ТаблицаДанных.Колонки.Добавить(СтрЗаменить("Колонка_" + Счетчик,Символы.НПП, ""));
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	ПервыйПрогон = Истина;
	
	Для Каждого МассивТаблицыДанных Из ДиапазонДанных Цикл
		
		Счетчик = 0;
		
		Для Каждого ЗначениеМассива Из МассивТаблицыДанных Цикл
			
			Если ПервыйПрогон Тогда 
				НоваяСтрока = ТаблицаДанных.Добавить();
			Иначе
				НоваяСтрока = ТаблицаДанных[Счетчик];
				Счетчик = Счетчик + 1;
			КонецЕсли;
			
			НомерКолонки = ДиапазонДанных.Найти(МассивТаблицыДанных) + 1;		
			НоваяСтрока.Установить(ТаблицаДанных.Колонки.Индекс(ТаблицаДанных.Колонки.Найти("Колонка_" + НомерКолонки)),ЗначениеМассива); 
			
			
			
		КонецЦикла;
		
		ПервыйПрогон = Ложь;
		
	КонецЦикла;
		
	АдресХранилища = ПоместитьВоВременноеХранилище(ТаблицаДанных);
	
КонецПроцедуры	

&НаСервере
Процедура ПодобратьНоменклатуру()
	ИсходноеКоличество = ТаблицаНоменклатуры.Количество();
	ТЗ = ТаблицаНоменклатуры.Выгрузить();
	ТЗ.Свернуть("Наименование, Производитель, НаименованиеПроизводителя, Описание", "Количество");
	ТаблицаНоменклатуры.Загрузить(ТЗ);
	РезультирующееКоличество = ТаблицаНоменклатуры.Количество();
	КоличествоДублей = ИсходноеКоличество - РезультирующееКоличество;
	Если КоличествоДублей > 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Свернуто дублей: " + Строка(КоличествоДублей));
	КонецЕсли;
	
	Для Каждого Строка Из ТаблицаНоменклатуры Цикл
		Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		Строка.Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию(Строка.Наименование, Истина);
		ЗаполнитьЗначенияСвойств(Строка, Строка.Номенклатура, "ЕдиницаИзмерения, ВидНоменклатуры, Родитель, Производитель");
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Проставить(Команда)
	Для Каждого Строка Из ТаблицаНоменклатуры Цикл
		Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		Строка.ЕдиницаИзмерения = ЕдиницаИзмерения;
		Строка.ВидНоменклатуры = ВидНоменклатуры;
		Строка.Родитель = Родитель;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СоздатьНоменклатуруНаСервере()
	Создано = 0;
	Для Каждого Строка Из ТаблицаНоменклатуры Цикл
		Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			Номенклатура = Справочники.Номенклатура.СоздатьЭлемент();
			//Номенклатура.ОбменДанными.Загрузка = Истина;
			ЗаполнитьЗначенияСвойств(Номенклатура, Строка, "Наименование, ЕдиницаИзмерения, ВидНоменклатуры, Родитель");
			ЗаполнитьЗначенияСвойств(Номенклатура, Строка.ВидНоменклатуры, "ТипНоменклатуры, ТипНоменклатурыРасширенный");
			Номенклатура.СтавкаНДС = Перечисления.СтавкиНДС.НДС0;
			Номенклатура.НаименованиеПолное = Строка.Наименование;
			Номенклатура.Описание = Строка.Описание;
			
			Производитель = Справочники.Производители.НайтиПоНаименованию(Строка.НаименованиеПроизводителя);
			
			Если Производитель.Пустая() Тогда
				Производитель = СПравочники.Производители.СоздатьЭлемент();
				Производитель.Наименование = Строка.НаименованиеПроизводителя;
				Производитель.Записать();
				Производитель = Производитель.Ссылка;
			КонецЕсли;	
			
			Номенклатура.Производитель = Производитель;
			
			Номенклатура.Записать();
			Создано = Создано + 1;
			Строка.Номенклатура = Номенклатура.Ссылка;
			Строка.Производитель = Номенклатура.Производитель;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Создано номенклатуры: " + Строка(Создано));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуру(Команда)
	СоздатьНоменклатуруНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументНаСервере(ДанныеФормы)
	Документ = Документы.ПоступлениеТоваров.СоздатьДокумент();
	Документ.Заполнить(Неопределено);
	ПараметрыУчетаНоменклатуры = Новый ФиксированнаяСтруктура(ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(Документ));
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшированныхЗначений();
	Действия = ОбработкаТабличнойЧастиКлиентСервер;
	Для Каждого Строка Из ТаблицаНоменклатуры Цикл
		НоваяСтрока = Документ.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка, "Номенклатура, ЕдиницаИзмерения");
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка.Номенклатура, "СтавкаНДС");
		НоваяСтрока.Количество = 1;
	КонецЦикла;
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить(Действия.Действие_ЗаполнитьПараметрыУчета(), ПараметрыУчетаНоменклатуры);
	ОбработкаТабличнойЧастиСервер.ОбработатьТабличнуюЧасть(Документ.Товары, СтруктураДействий, КэшированныеЗначения); 
	ЗначениеВДанныеФормы(Документ, ДанныеФормы);
КонецПроцедуры

&НаСервере
Процедура ТаблицаНоменклатурыНоменклатураПриИзмененииНаСервере(Идентификатор)
	Строка = ТаблицаНоменклатуры.НайтиПоИдентификатору(Идентификатор);
	ЗаполнитьЗначенияСвойств(Строка, Строка.Номенклатура, "ЕдиницаИзмерения, ВидНоменклатуры, Родитель");	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНоменклатурыНоменклатураПриИзменении(Элемент)
	ТаблицаНоменклатурыНоменклатураПриИзмененииНаСервере(Элементы.ТаблицаНоменклатуры.ТекущиеДанные.ПолучитьИдентификатор());
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	Закрыть(ПолучитьАдресХранилища());
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресХранилища()
	Возврат ПоместитьВоВременноеХранилище(ТаблицаНоменклатуры.Выгрузить(,"Номенклатура, Количество"));
КонецФункции	