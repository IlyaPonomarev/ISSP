
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Номенклатура = Параметры.Номенклатура;
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		ВызватьИсключение НСтр("ru = 'Для связи со строкой заказа указание номенклатуры обязательно.'");
	КонецЕсли;
	
	Документ = Параметры.Документ;
	Распоряжение = Параметры.РаспоряжениеНаОформление;
	Валюта = Параметры.Валюта;
	
	Если ЗначениеЗаполнено(Документ) Тогда
		ПредставлениеДокумента = Строка(Документ);
	Иначе
		ПредставлениеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 (новый)'"), Документ.Метаданные().Представление());
	КонецЕсли;
	
	Заголовок = Заголовок + ": " + ПредставлениеДокумента;
	
	ЗаполнитьСтрокиЗаказа(Распоряжение, Документ);
	
	УстановитьОтборПоНоменклатуре = Истина;
	ИзменитьОтборТоваров();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

//////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УстановитьОтборПоНоменклатуреПриИзменении(Элемент)
	
	ИзменитьОтборТоваров();
	
КонецПроцедуры



#КонецОбласти // ОбработчикиСобытийЭлементовФормы

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборСтроки();
	
КонецПроцедуры
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	ОбработатьВыборСтроки();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы



////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.Товары.Имя);
	
	Отбор = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элементы.ТоварыНоменклатура.ПутьКДанным);
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ПравоеЗначение = Новый ПолеКомпоновкиДанных(Элементы.Номенклатура.ПутьКДанным);
	
	//@skip-check new-font
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(Элементы.Товары.Шрифт,,, Истина));
	
	ЗаказыСервер.УстановитьОформлениеСтрокиПрисутствующейВДокументе(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПохожуюНоменклатуру()
	
	//ОписаниеНоменклатуры = НоменклатураСервер.ОписаниеНоменклатуры(Номенклатура);

	ПохожаяНоменклатура = Новый Массив;
	ПохожаяНоменклатура.Добавить(Номенклатура);
	
	Возврат ПохожаяНоменклатура;
	
КонецФункции

&НаСервере
Процедура ИзменитьОтборТоваров()
	
	Если УстановитьОтборПоНоменклатуре Тогда
		Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("ПохожаяНоменклатура", Истина);
	Иначе
		Элементы.Товары.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборСтроки()
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("КодСтроки"   , ТекущаяСтрока.КодСтроки);
	Результат.Вставить("Номенклатура", ТекущаяСтрока.Номенклатура);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокиЗаказа(Распоряжение, Документ)
	
	МенеджерЗаказа = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Распоряжение);
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	КурсНовойВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, Параметры.ДатаДокумента);
	
	ПохожаяНоменклатура = ПолучитьПохожуюНоменклатуру();
	
	Выборка = МенеджерЗаказа.ПолучитьРезультатЗапросаПоОстаткам(Распоряжение, Документ).Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТовара = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовара, Выборка);
		СтрокаТовара.ОстатокПоДокументу = Выборка.Количество;
		
		ИзменилосьКоличество = (Выборка.Количество <> Выборка.КоличествоПоДокументу);
		
		Если Не ИзменилосьКоличество Тогда
			СтрокаТовара.Количество = Выборка.КоличествоПоДокументу;
			СтрокаТовара.ОстатокПоДокументу = Выборка.КоличествоПоДокументу;
		КонецЕсли;
		
		Если Выборка.ЦенаВключаетНДС <> Параметры.ЦенаВключаетНДС Тогда
			Если Выборка.ЦенаВключаетНДС Тогда
				Сумма = Выборка.СуммаСНДС - Выборка.СуммаНДС;
			Иначе
				Сумма = Выборка.СуммаСНДС
			КонецЕсли;
			СтрокаТовара.Цена = Сумма / Выборка.КоличествоПоДокументу;
		КонецЕсли;
		
		Если Выборка.Валюта <> Валюта Тогда
			
			ПараметрыОтбора = Новый Структура("Валюта,Дата", Выборка.Валюта, НачалоДня(Выборка.Дата));
			КурсыВалюты = ТаблицаКурсовВалют.НайтиСтроки(ПараметрыОтбора);
			
			Если КурсыВалюты.Количество() = 0 Тогда
				КурсВалюты = ТаблицаКурсовВалют.Добавить();
				КурсВалюты.Валюта = Выборка.Валюта;
				КурсВалюты.Дата = НачалоДня(Выборка.Дата);
				
				ПараметрыКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Дата);
				КурсВалюты.Курс = ПараметрыКурса.Курс;
				КурсВалюты.Кратность = ПараметрыКурса.Кратность;
			Иначе
				КурсВалюты = КурсыВалюты[0];
				
			КонецЕсли;
			
			СтрокаТовара.Цена = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(СтрокаТовара.Цена, КурсВалюты, КурсНовойВалюты);
			
		КонецЕсли;
		
		СтрокаТовара.ПохожаяНоменклатура = (ПохожаяНоменклатура.Найти(СтрокаТовара.Номенклатура) <> Неопределено);
		
	КонецЦикла;
	
	Действия = ОбработкаТабличнойЧастиКлиентСервер;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить(Действия.Действие_ПересчитатьКоличествоУпаковок());
	
	КэшированныеЗначения = Неопределено;
	
	Для Каждого ДанныеСтроки Из Параметры.ДанныеСтрок Цикл
		
		НайденныеСтроки = Товары.НайтиСтроки(Новый Структура("КодСтроки", ДанныеСтроки.КодСтроки));
		Если НайденныеСтроки.Количество() > 0 Тогда
			ТекущаяСтрока = НайденныеСтроки[0];
			Если ТекущаяСтрока.Количество > ДанныеСтроки.Количество Тогда
				ТекущаяСтрока.Количество = ДанныеСтроки.Количество;
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТабличнойЧасти(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
			КонецЕсли;
			ТекущаяСтрока.ПрисутствуетВДокументе = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
