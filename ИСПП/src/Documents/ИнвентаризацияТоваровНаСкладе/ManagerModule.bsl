#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Имена реквизитов, от значений которых зависят параметры учета номенклатуры
//
// Возвращаемое значение:
//   Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУчетаНоменклатуры() Экспорт
	
	Возврат "Склад";
	
КонецФункции

// Возвращает параметры учета для номенклатуры, указанной в документе
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
// Возвращаемое значение:
// 	 Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУчетаНоменклатуры
Функция ПараметрыУчетаНоменклатуры(Объект) Экспорт
	
	ПараметрыУчета = ЗапасыСервер.ПараметрыУчетаНоменклатуры();
	ПараметрыУчета.ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	
	ПараметрыУчетаНаСкладе = СкладыСервер.ПараметрыУчетаНоменклатуры(Объект.Склад);
	ПараметрыУчета.ИспользоватьСерии = ПараметрыУчетаНаСкладе.ИспользоватьСерииНоменклатуры;
	ПараметрыУчета.ИспользоватьПартии = ПараметрыУчетаНаСкладе.ИспользоватьПартии;
	ПараметрыУчета.Склад = Объект.Склад;
	
	ПараметрыУчета.ИспользоватьСправочноеУказаниеСерий = Ложь;
	
	//@skip-check constructor-function-return-section
	Возврат ПараметрыУчета;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания параметров учета номенклатуры
//
// Параметры:
//   ПараметрыУчетаНоменклатуры - Структура - состав полей задается в функции ЗапасыСервер.ПараметрыУчетаНоменклатуры
//
// Возвращаемое значение:
//   Строка - текст запроса
Функция ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры) Экспорт
	
	Возврат ЗапасыСервер.ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры);
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение
#Область Проведение

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Параметры:
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
// ДополнительныеСвойства - Структура
//	Регистры - Неопределено
Процедура СформироватьТаблицыДвиженийДляПроведения(ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ОсновныеДанныеДокумента = ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства);
	
	ПроведениеПоддержкаПроектов.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтТаблицаТовары());
	ПроведениеПоддержкаПроектов.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаТоварыКОформлениюИзлишковНедостач(), Метаданные.РегистрыНакопления.ТоварыКОформлениюИзлишковНедостач);
	
	Запрос = Новый Запрос(ПроведениеПоддержкаПроектов.ПолучитьТекстЗапросаДвижений(ДополнительныеСвойства, Регистры));
	
	Для Каждого ДанныеДокумента Из ОсновныеДанныеДокумента Цикл
		Запрос.УстановитьПараметр(ДанныеДокумента.Ключ, ДанныеДокумента.Значение);
	КонецЦикла;
	
	ПроведениеПоддержкаПроектов.ЗаполнитьТаблицыДвижений(ДополнительныеСвойства, Запрос.ВыполнитьПакет(), Регистры);
	
КонецПроцедуры

Функция ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства)
	
	ЗапрашиваемыеДанные = Новый Структура;
	ЗапрашиваемыеДанные.Вставить("Ссылка");
	ЗапрашиваемыеДанные.Вставить("ДокументОснование", "Ссылка");
	ЗапрашиваемыеДанные.Вставить("Период", "Дата");
	ЗапрашиваемыеДанные.Вставить("Организация");
	ЗапрашиваемыеДанные.Вставить("Склад");
	ЗапрашиваемыеДанные.Вставить("Статус");
	
	ОсновныеДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПроведениеПоддержкаПроектов.ПолучитьСсылкуНаДокументДляПроведения(ДополнительныеСвойства),
		ЗапрашиваемыеДанные);
		
	ЗапасыСервер.ПриПодготовкеОсновныхДанныхДляПроведения(ДополнительныеСвойства, ОсновныеДанныеДокумента);
	
	Возврат ОсновныеДанныеДокумента;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                                                                  КАК Период,
	|	&Организация                                                             КАК Организация,
	|	&Склад КАК Склад,
	|	&ДокументОснование                                                       КАК ДокументОснование,
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки)                                      КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетПоСериям, &СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                                    КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетПоПартиям, &СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                                    КАК Партия,
	|	Сумма(ТаблицаТовары.Количество - ТаблицаТовары.КоличествоПоДаннымУчета)  КАК КОформлениюОприходования,
	|	0 КАК КОформлениюСписания
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнвентаризацииТоваров.Выполнено)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетПоСериям, &СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетПоПартиям, &СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТовары.Количество - ТаблицаТовары.КоличествоПоДаннымУчета) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Организация,
	|	&Склад,
	|	&ДокументОснование,
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетПоСериям, &СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетПоПартиям, &СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	0,
	|	Сумма(ТаблицаТовары.КоличествоПоДаннымУчета - ТаблицаТовары.Количество)
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнвентаризацииТоваров.Выполнено)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетПоСериям, &СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетПоПартиям, &СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТовары.Количество - ТаблицаТовары.КоличествоПоДаннымУчета) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыКОформлениюИзлишковНедостач()
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаТовары.Период                    КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	ТаблицаТовары.Склад                     КАК Склад,
	|	ТаблицаТовары.ДокументОснование         КАК ДокументОснование,
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.КОформлениюОприходования  КАК КОформлениюОприходования,
	|	ТаблицаТовары.КОформлениюСписания       КАК КОформлениюСписания
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
		
КонецФункции

#КонецОбласти // Проведение

////////////////////////////////////////////////////////////////////////////////
// Печать
#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	УправлениеПечатьюПоддержкаПроектов.ДобавитьКомандыПечати(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыПечати);
	
КонецПроцедуры

// Возвращает список доступных печатных форм документа
//Возвращаемое значение:
// ТаблицаЗначений
Функция ДоступныеПечатныеФормы() Экспорт
	
	ПечатныеФормы = УправлениеПечатьюПоддержкаПроектов.СоздатьКоллекциюДоступныхПечатныхФорм();
	
	ПечатнаяФорма = Обработки.ПечатьИнвентаризационнаяОписьНФА_0504087.ДобавитьПечатнуюФорму(ПечатныеФормы);
	КомандаПечати = УправлениеПечатьюПоддержкаПроектов.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	КомандаПечати = УправлениеПечатьюПоддержкаПроектов.ДобавитьКомандуПечати(ПечатнаяФорма);
	КомандаПечати.Представление = КомандаПечати.Представление + " " + НСтр("ru = 'с пустыми фактическими данными'");
	КомандаПечати.ДополнительныеПараметры.Вставить("БезФактическихДанных", Истина);
	
	ПечатнаяФорма = Обработки.ПечатьИНВ3.ДобавитьПечатнуюФорму(ПечатныеФормы);
	КомандаПечати = УправлениеПечатьюПоддержкаПроектов.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	КомандаПечати = УправлениеПечатьюПоддержкаПроектов.ДобавитьКомандуПечати(ПечатнаяФорма);
	КомандаПечати.Представление = КомандаПечати.Представление + " " + НСтр("ru = 'с пустыми фактическими данными'");
	КомандаПечати.ДополнительныеПараметры.Вставить("БезФактическихДанных", Истина);
	
	ПечатнаяФорма = Обработки.ПечатьИНВ19.ДобавитьПечатнуюФорму(ПечатныеФормы);
	КомандаПечати = УправлениеПечатьюПоддержкаПроектов.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	Возврат ПечатныеФормы;
	
КонецФункции

Функция ПолучитьДанныеДляПечати(МассивОбъектов, ПараметрыПечати = Неопределено) Экспорт
	
	БезФактическихДанных = Ложь;
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") Тогда
		Если ПараметрыПечати.Свойство("БезФактическихДанных") Тогда
			БезФактическихДанных = ПараметрыПечати.БезФактическихДанных;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеДляПечати();
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	Запрос.УстановитьПараметр("БезФактическихДанных", БезФактическихДанных);
	ЗапасыСервер.УстановитьСтатусыПараметровУчетаВПараметрахЗапроса(Запрос);
	
	ОсновныеДанные = Запрос.Выполнить().Выбрать();
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("ОсновныеДанные", ОсновныеДанные);
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ТекстЗапросаДанныеДляПечати()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Документ.Ссылка                                            КАК Ссылка,
	|	Документ.Номер                                             КАК НомерДокумента,
	|	Документ.Дата                                              КАК ДатаДокумента,
	|	Документ.ДатаОкончанияИнвентаризации                       КАК ДатаСнятияОстатков,
	|	Документ.ДатаНачалаИнвентаризации                          КАК ДатаНачалаИнвентаризации,
	|	Документ.ДатаОкончанияИнвентаризации                       КАК ДатаОкончанияИнвентаризации,
	|	Документ.ДокументОснованиеВид                              КАК ДокументОснованиеВид,
	|	Документ.ДокументОснованиеДата                             КАК ДокументОснованиеДата,
	|	Документ.ДокументОснованиеНомер                            КАК ДокументОснованиеНомер,
	|	Документ.Организация                                       КАК Организация,
	|	Документ.Склад                                             КАК Склад,
	|	Документ.Склад.Представление                               КАК ПредставлениеСклада,
	|	Документ.Товары.(
	|		НомерСтроки                                КАК НомерСтроки,
	|		Номенклатура                               КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное            КАК ТоварНаименование,
	|		Номенклатура.Описание                      КАК Описание,
	|		Номенклатура.Код                           КАК ТоварКод,
	|		ЕдиницаИзмерения.Представление             КАК ЕдиницаИзмерения,
	|		ЕдиницаИзмерения.КодОКЕИ                   КАК КодПоОКЕИ,
	|		ВЫБОР
	|			КОГДА &БезФактическихДанных
	|				ТОГДА 0
	|			ИНАЧЕ Количество
	|		КОНЕЦ                                      КАК ФактКоличество,
	|		КоличествоПоДаннымУчета  КАК БухКоличество,
	|		0                                          КАК Цена,
	|		ВЫБОР
	|			КОГДА &БезФактическихДанных
	|				ТОГДА 0
	|			ИНАЧЕ 0
	|		КОНЕЦ                                      КАК ФактСумма,
	|		0                                          КАК БухСумма,
	|		СерияНоменклатуры                          КАК Серия,
	|		ВЫБОР
	|			КОГДА Товары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	|				ТОГДА Товары.СерияНоменклатуры
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                                      КАК СерияНоменклатурыДляСебестоимости,
	|		Партия                                     КАК Партия,
	|		ВЫБОР
	|			КОГДА Товары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	|				ТОГДА Товары.Партия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                                      КАК ПартияДляСебестоимости
	|	),
	|	Документ.ИнвентаризационнаяКомиссия.(
	|		НомерСтроки                КАК НомерСтроки,
	|		Должность                  КАК Должность,
	|		ЧленКомиссии.Наименование  КАК Представление,
	|		Председатель               КАК Председатель
	|	)
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&ТекущийДокумент)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Ссылка,
	|	Товары.НомерСтроки,
	|	ИнвентаризационнаяКомиссия.Председатель УБЫВ,
	|	ИнвентаризационнаяКомиссия.НомерСтроки
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует таблицу цен документа для печати
// 
// Параметры:
//  Шапка - СтрокаТаблицыЗначений
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Получить таблицу цен
Функция ПолучитьТаблицуЦен(Шапка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Товары.НомерСтроки                    КАК НомерСтроки,
	|	Товары.Номенклатура                   КАК Номенклатура,
	|	Товары.СерияНоменклатуры              КАК СерияНоменклатуры,
	|	Товары.Партия                         КАК Партия,
	|	Товары.ЕдиницаИзмерения               КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА Товары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА Товары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                 КАК СерияНоменклатурыДляСебестоимости,
	|	ВЫБОР
	|		КОГДА Товары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА Товары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                 КАК ПартияДляСебестоимости,
	|	Товары.Ссылка.Организация             КАК Организация,
	|	Товары.Ссылка.Склад                   КАК Склад
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ТекущийДокумент
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки                        КАК НомерСтроки,
	|	АналитикиВидаУчета.КлючАналитики          КАК АналитикаВидаУчета,
	|	АналитикиУчетаНоменклатуры.КлючАналитики  КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ Аналитика
	|ИЗ
	|	ТаблицаТовары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК АналитикиВидаУчета
	|	ПО
	|		АналитикиВидаУчета.Организация = Товары.Организация
	|		И АналитикиВидаУчета.Склад = Товары.Склад
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиУчетаНоменклатуры
	|	ПО
	|		АналитикиУчетаНоменклатуры.Номенклатура = Товары.Номенклатура
	|		И АналитикиУчетаНоменклатуры.СерияНоменклатуры = Товары.СерияНоменклатурыДляСебестоимости
	|		И АналитикиУчетаНоменклатуры.Партия = Товары.ПартияДляСебестоимости
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьТоваровОстатки.АналитикаВидаУчета          КАК АналитикаВидаУчета,
	|	СтоимостьТоваровОстатки.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА СтоимостьТоваровОстатки.КоличествоОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(СтоимостьТоваровОстатки.СтоимостьРеглОстаток КАК ЧИСЛО(23, 10)) / СтоимостьТоваровОстатки.КоличествоОстаток
	|	КОНЕЦ                                               КАК Цена
	|ПОМЕСТИТЬ СтоимостьТоваровОстатки
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(
	|			&ДатаОстатков,
	|			(АналитикаВидаУчета, АналитикаУчетаНоменклатуры) В
	|				(ВЫБРАТЬ
	|					Таблица.АналитикаВидаУчета,
	|					Таблица.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					Аналитика КАК Таблица)
	|		) КАК СтоимостьТоваровОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки  КАК НомерСтроки,
	|	ЕСТЬNULL(СтоимостьТоваровОстатки.Цена, 0) КАК Цена
	|ПОМЕСТИТЬ ЦеныНоменклатуры
	|ИЗ
	|	Аналитика КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СтоимостьТоваровОстатки КАК СтоимостьТоваровОстатки
	|	ПО
	|		Товары.АналитикаВидаУчета = СтоимостьТоваровОстатки.АналитикаВидаУчета
	|		И Товары.АналитикаУчетаНоменклатуры = СтоимостьТоваровОстатки.АналитикаУчетаНоменклатуры;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки  КАК НомерСтроки,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК Цена
	|ИЗ
	|	ТаблицаТовары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|	ПО
	|		Товары.НомерСтроки = ЦеныНоменклатуры.НомерСтроки
	|";
	
	ДатаОкончания = КонецДня(Шапка.ДатаДокумента);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТекущийДокумент", Шапка.Ссылка);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаОстатков", ДатаОкончания + 1);
	Запрос.УстановитьПараметр("Валюта", ЗначениеНастроекПоддержкаПроектовПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	ЗапасыСервер.УстановитьСтатусыПараметровУчетаВПараметрахЗапроса(Запрос);
	ТаблицаЦен = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаЦен;
	
КонецФункции

#КонецОбласти // Печать

////////////////////////////////////////////////////////////////////////////////
// Команды формы
#Область КомандыФормы

// Заполняет список команд ввода на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//	 НастройкиФормы - Неопределено
Процедура ДобавитьКомандыСоздатьНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводНаОснованииПоддержкаПроектов.ДобавитьКомандыСоздатьНаОсновании(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыСоздатьНаОсновании, НастройкиФормы);
	
КонецПроцедуры

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//	 НастройкиФормы - Неопределено
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, НастройкиФормы) Экспорт
	
	МенюОтчетыПоддержкаПроектов.ДобавитьОбщиеКоманды(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыОтчетов, НастройкиФормы);
	
	Отчеты.ТоварыКОформлениюИзлишковНедостач.ДобавитьКомандуОтчета(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти // КомандыФормы

#КонецОбласти // СлужебныеПроцедурыИФункции


#КонецЕсли