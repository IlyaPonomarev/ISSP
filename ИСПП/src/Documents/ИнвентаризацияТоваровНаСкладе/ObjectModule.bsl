#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		ЗаполнитьДокументПоОтбору(ДанныеЗаполнения)
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
	ЗаполнитьПоЗначениямАвтозаполнения();
	
	ОбщегоНазначенияПоддержкаПроектов.ЗаполнитьРеквизитыПоСкладу(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Статус = Перечисления.СтатусыИнвентаризацииТоваров.ВРаботе;
	
	ИнициализироватьДокумент();
	
	ПараметрыУчетаНоменклатуры = ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект);
	ЗапасыСервер.ЗаполнитьСтатусыУчетаНоменклатуры(ЭтотОбъект, ПараметрыУчетаНоменклатуры);
	
	ОбщегоНазначенияПоддержкаПроектов.ЗаполнитьРеквизитыПоСкладу(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	ОбработкаТабличнойЧастиСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, НепроверяемыеРеквизиты, Отказ);
	
	ПараметрыУчетаНоменклатуры = ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект);
	ЗапасыСервер.ПроверитьЗаполнениеСерийНоменклатуры(ЭтотОбъект, ПараметрыУчетаНоменклатуры, НепроверяемыеРеквизиты, Отказ);
	ЗапасыСервер.ПроверитьЗаполнениеПартийНоменклатуры(ЭтотОбъект, ПараметрыУчетаНоменклатуры, НепроверяемыеРеквизиты, Отказ);
	
	МетаданныеОбъекта = Метаданные();
	
	Для Каждого СтрокаТовара Из Товары Цикл
		
		Если СтрокаТовара.Количество = 0 И СтрокаТовара.КоличествоПоДаннымУчета = 0 Тогда
			
			ТекстСообщения = НСтр("ru='Не заполнено количество ни ""По учету"" ни ""По факту"" в строке %НомерСтроки% списка ""%ИмяТабличнойЧасти%""'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокаТовара.НомерСтроки);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяТабличнойЧасти%", МетаданныеОбъекта.ТабличныеЧасти.Товары.Синоним);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				ЭтотОбъект, 
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТовара.НомерСтроки, "Количество"),
				,
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеПоддержкаПроектов.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбработкаТабличнойЧастиСервер.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);
	
	ПараметрыУчетаНоменклатуры = ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект);
	ЗапасыСервер.ОчиститьНеиспользуемыеРеквизиты(ЭтотОбъект, ПараметрыУчетаНоменклатуры);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если Не УчетныеДанныеЗаполнены Тогда
			КлючевыеРеквизиты = Новый Массив;
			КлючевыеРеквизиты.Добавить("Номенклатура");
			Если ПараметрыУчетаНоменклатуры.ИспользоватьСерии Тогда
				КлючевыеРеквизиты.Добавить("СерияНоменклатуры");
			КонецЕсли;
			Если ПараметрыУчетаНоменклатуры.ИспользоватьПартии Тогда
				КлючевыеРеквизиты.Добавить("Партия");
			КонецЕсли;
			ОбработкаТабличнойЧастиСервер.ПроверитьНаличиеДублейСтрок(ЭтотОбъект, "Товары", КлючевыеРеквизиты, Отказ);
		КонецЕсли;
		
		Если Не УчетныеДанныеЗаполнены И Не Отказ Тогда
			ЗаполнитьКоличествоПоУчету();
		КонецЕсли;
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		УчетныеДанныеЗаполнены = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеПоддержкаПроектов.СформироватьДвиженияПоРегистрам(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеПоддержкаПроектов.СформироватьДвиженияПоРегистрам(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение документа
#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент()
	
	Дата = ТекущаяДатаСеанса();
	Автор = Пользователи.ТекущийПользователь();
	Ответственный = Пользователи.ТекущийПользователь();
	
	ЗаполнитьПоляПоУмолчанию();
	
КонецПроцедуры

Процедура ЗаполнитьПоляПоУмолчанию()
	
	Организация = ЗначениеНастроекПоддержкаПроектовПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Склад = ЗначениеНастроекПоддержкаПроектовПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	
КонецПроцедуры

Процедура ЗаполнитьПоЗначениямАвтозаполнения()
	
	ОбщегоНазначенияПоддержкаПроектов.ЗаполнитьПоЗначениямАвтозаполнения(ЭтотОбъект, Неопределено, "Организация, Склад");
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоОтбору(ДанныеЗаполнения)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ЗаполнитьКоличествоПоУчету()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Таблица.Номенклатура                  КАК Номенклатура,
	|	Таблица.СерияНоменклатуры             КАК СерияНоменклатуры,
	|	Таблица.Партия                        КАК Партия,
	|	Таблица.СтатусУказанияСерий           КАК СтатусУказанияСерий,
	|	Таблица.СтатусУказанияПартий          КАК СтатусУказанияПартий,
	|	Таблица.ЕдиницаИзмерения              КАК ЕдиницаИзмерения,
	|	Таблица.Количество                    КАК Количество,
	|	Таблица.НомерСтроки                   КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	&ТаблицаНоменклатуры КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Номенклатура                  КАК Номенклатура,
	|	ТаблицаНоменклатуры.СерияНоменклатуры             КАК СерияНоменклатуры,
	|	ТаблицаНоменклатуры.Партия                        КАК Партия,
	|	ТаблицаНоменклатуры.СтатусУказанияСерий           КАК СтатусУказанияСерий,
	|	ТаблицаНоменклатуры.СтатусУказанияПартий          КАК СтатусУказанияПартий,
	|	ТаблицаНоменклатуры.ЕдиницаИзмерения              КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ТоварыНаСкладах.КоличествоОстаток, 0)    КАК КоличествоПоДаннымУчета,
	|	ТаблицаНоменклатуры.Количество                    КАК Количество
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&ДатаОстатков,
	|				(Номенклатура, СерияНоменклатуры, Партия, Организация, Склад) В
	|					(ВЫБРАТЬ
	|						Таблица.Номенклатура,
	|						Таблица.СерияНоменклатуры,
	|						Таблица.Партия,
	|						&Организация,
	|						&Склад
	|					ИЗ
	|						ТаблицаНоменклатуры КАК Таблица)) КАК ТоварыНаСкладах
	|		ПО
	|			ТаблицаНоменклатуры.Номенклатура = ТоварыНаСкладах.Номенклатура
	|			И ТаблицаНоменклатуры.СерияНоменклатуры = ТоварыНаСкладах.СерияНоменклатуры
	|			И ТаблицаНоменклатуры.Партия = ТоварыНаСкладах.Партия
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатуры.НомерСтроки
	|";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры", Товары.Выгрузить());
	Запрос.УстановитьПараметр("ДатаОстатков", Дата);
	
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	УчетныеДанныеЗаполнены = Истина;
	
КонецПроцедуры

#КонецОбласти // ИнициализацияИЗаполнение

////////////////////////////////////////////////////////////////////////////////
// Прочее
#Область Прочее

Функция СписокРегистровДляКонтроля() Экспорт
	
	РегистрыДляКонтроля = Новый Массив;
	РегистрыДляКонтроля.Добавить(Движения.ТоварыКОформлениюИзлишковНедостач);
	
	Возврат РегистрыДляКонтроля;
	
КонецФункции

#КонецОбласти // Прочее

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли