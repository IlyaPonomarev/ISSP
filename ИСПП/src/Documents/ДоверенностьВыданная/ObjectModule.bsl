#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Устанавливает статус для объекта документа
//
// Параметры:
//	НовыйСтатус - Строка - Имя статуса, который будет установлен у заказов
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров установки статуса
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешной установки нового статуса
//
Функция УстановитьСтатус(НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Статус = Перечисления.СтатусыДоверенностей[НовыйСтатус];
	
	Возврат ПроверитьЗаполнение();
	
КонецФункции

// Заполняет документ по основанию
// Параметры:
//	ДанныеЗаполнения - Структура, ДокументСсылка - основание
//
Процедура ЗаполнитьНаОсновании(ДанныеЗаполнения) Экспорт
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			Если ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("СправочникСсылка.ПоступлениеТоваров") Тогда
				ЗаполнитьПоПоступлению(ДанныеЗаполнения.ДокументОснование);
			ИначеЕсли ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.СпецификацияКДоговору") Тогда
				ЗаполнитьПоСпецификации(ДанныеЗаполнения.ДокументОснование);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		ЗаполнитьПоПоступлению(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.СпецификацияКДоговору") Тогда
		ЗаполнитьПоСпецификации(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПроектЗадания") Или ТипДанныхЗаполнения = Тип("ДокументСсылка.ГЗ") Тогда
		ЗаполнитьПоПроекту(ДанныеЗаполнения);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнитьНаОсновании(ДанныеЗаполнения);
	ИнициализироватьДокумент(ДанныеЗаполнения);
	ДополнительныеСвойства.Вставить("НеобходимостьЗаполненияСчетаПриФОИспользоватьНесколькоСчетовЛожь", Ложь);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если ЗначениеЗаполнено(ДатаОкончанияДействия) И ДатаОкончанияДействия < НачалоДня(Дата) Тогда
		ТекстОшибки = НСтр("ru='Дата окончания действия должна быть не меньше даты документа %Дата%'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Дата%", Формат(Дата, "ДЛФ=DD"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			"ДатаОкончанияДействия",
			,
			Отказ);
	КонецЕсли;
	Если ТипДоверенности = Перечисления.ТипыВыданныхДоверенностей.НаПолучениеПрочихМатериальныхЦенностей Тогда
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	Если Статус = Перечисления.СтатусыДоверенностей.Выдана
		И НЕ Статус = Ссылка.Статус Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Статус = Перечисления.СтатусыДоверенностей.НеВыдана;
	Если ЗначениеЗаполнено(ОбъектКопирования.СрокДействия) Тогда
		ДатаОкончанияДействия = ТекущаяДата() + ОбъектКопирования.СрокДействия * 86400;
	КонецЕсли;
	ИнициализироватьДокумент();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	Ответственный = Пользователи.ТекущийПользователь();
	Организация    = Справочники.Организации.ОрганизацияПоУмолчанию();
	
	БанковскийСчет = Справочники.БанковскиеСчетаОрганизаций.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(Организация);
	Руководитель = ОтветственныеЛицаСервер.ПолучитьДанныеОтветственногоЛица(Организация, Дата, Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	ГлавныйБухгалтер = ОтветственныеЛицаСервер.ПолучитьДанныеОтветственногоЛица(Организация, Дата, Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
	
	// Срок действия доверенности по умолчанию подставляется из последней доверенности, иначе 15 рабочих дней
	Если Не ЗначениеЗаполнено(СрокДействия) Тогда
		СрокДействияПоследнейДоверенности = Документы.ДоверенностьВыданная.ПолучитьСрокДействияПоследнейДоверенности();
		Если СрокДействияПоследнейДоверенности <> Неопределено Тогда
			СрокДействия = СрокДействияПоследнейДоверенности;
		Иначе
			СрокДействия = 15;
		КонецЕсли;
		ДатаОкончанияДействия = ТекущаяДата() + 1296000;
	КонецЕсли;
	ПолучитьПоследниеПаспортныеДанныеСтрокой();
	
КонецПроцедуры

#Область ЗаполнениеНаПолучениеТоваров

Процедура ЗаполнитьПоПоступлению(ДокументОснование)

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументОснование,,"Номер,Дата,Ответственный");
	ЭтотОбъект.Партнер = ДокументОснование.Контрагент;
	ЭтотОбъект.Товары.Загрузить(ДокументОснование.Товары.Выгрузить());
	ДокументОснование = ДокументОснование;
	ТипДоверенности = Перечисления.ТипыВыданныхДоверенностей.НаПолучениеПрочихМатериальныхЦенностей;
	
КонецПроцедуры

Процедура ЗаполнитьПоСпецификации(ДокументОснование)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументОснование,,"Номер,Дата,Ответственный");
	ЭтотОбъект.Партнер = ДокументОснование.Контрагент;
	ЭтотОбъект.Товары.Загрузить(ДокументОснование.Товары.Выгрузить());
	ДокументОснование = ДокументОснование;
	ТипДоверенности = Перечисления.ТипыВыданныхДоверенностей.НаПолучениеПрочихМатериальныхЦенностей;
	
КонецПроцедуры

Процедура ЗаполнитьПоПроекту(ДокументОснование)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументОснование,,"Номер,Дата,Ответственный");
	Если Не ДокументОснование.ПроизвольныйПредметПроекта Тогда
		Для Каждого Строка Из ДокументОснование.ПредметыПроекта Цикл
			НоваяСтрока = ЭтотОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			НоваяСтрока.ЕдиницаИзмерения = Строка.Номенклатура.ЕдиницаИзмерения;
		КонецЦикла;
	КонецЕсли;
	ДокументОснование = ДокументОснование;
	ТипДоверенности = Перечисления.ТипыВыданныхДоверенностей.НаПолучениеПрочихМатериальныхЦенностей;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

Процедура ПолучитьПоследниеПаспортныеДанныеСтрокой()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ВидДокументаФизЛица,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК СерияДокументаФизЛица,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК НомерДокументаФизЛица,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыданДокументФизлица,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачиДокументаФизЛица,
	|	ДокументыФизическихЛицСрезПоследних.Представление КАК ПредставлениеДокументаФизЛица
	|ПОМЕСТИТЬ ПаспортРФ
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛицСрезПоследних
	|ГДЕ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо = &ФизЛицо
	|	И ДокументыФизическихЛицСрезПоследних.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПаспортРФ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ВидДокументаФизЛица,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК СерияДокументаФизЛица,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК НомерДокументаФизЛица,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыданДокументФизлица,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачиДокументаФизЛица,
	|	ДокументыФизическихЛицСрезПоследних.Представление КАК ПредставлениеДокументаФизЛица
	|ПОМЕСТИТЬ ДокументУдостоверяющийЛичность
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛицСрезПоследних
	|ГДЕ
	|	ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность
	|	И ДокументыФизическихЛицСрезПоследних.Физлицо = &ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументыФизическихЛицСрезПоследних.Период УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПаспортРФ.ВидДокументаФизЛица ЕСТЬ NULL 
	|			ТОГДА ДокументУдостоверяющийЛичность.ВидДокументаФизЛица
	|		ИНАЧЕ ПаспортРФ.ВидДокументаФизЛица
	|	КОНЕЦ КАК ВидДокументаФизЛица
	|ПОМЕСТИТЬ ВыбранныйВидДокумента
	|ИЗ
	|	ПаспортРФ КАК ПаспортРФ
	|		ПОЛНОЕ СОЕДИНЕНИЕ ДокументУдостоверяющийЛичность КАК ДокументУдостоверяющийЛичность
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ВидДокументаФизЛица,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК СерияДокументаФизЛица,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК НомерДокументаФизЛица,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыданДокументФизлица,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачиДокументаФизЛица,
	|	ДокументыФизическихЛицСрезПоследних.Представление КАК ПредставлениеДокументаФизЛица
	|ИЗ
	|	ВыбранныйВидДокумента КАК ВыбранныйВидДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛицСрезПоследних
	|		ПО ВыбранныйВидДокумента.ВидДокументаФизЛица = ДокументыФизическихЛицСрезПоследних.ВидДокумента
	|ГДЕ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо = &ФизЛицо";
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ВыборкаДетальныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли
