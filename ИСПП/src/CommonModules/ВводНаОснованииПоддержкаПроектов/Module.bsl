
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// См. ПодключаемыеКомандыПереопределяемый.ПриОпределенииВидовПодключаемыхКоманд.
Процедура ПриОпределенииВидовПодключаемыхКоманд(ВидыПодключаемыхКоманд) Экспорт
	
	Вид = ВидыПодключаемыхКоманд.Добавить();
	Вид.Имя         = "СозданиеНаОсновании";
	Вид.ИмяПодменю  = "ПодменюСоздатьНаОсновании";
	Вид.Заголовок   = НСтр("ru = 'Создать на основании'");
	Вид.Картинка    = БиблиотекаКартинок.ВводНаОсновании;
	Вид.Отображение = ОтображениеКнопки.Картинка;
	
КонецПроцедуры

// См. ПодключаемыеКомандыПереопределяемый.ПриОпределенииСоставаНастроекПодключаемыхОбъектов.
Процедура ПриОпределенииСоставаНастроекПодключаемыхОбъектов(НастройкиПрограммногоИнтерфейса) Экспорт
	
	Настройка = НастройкиПрограммногоИнтерфейса.Добавить();
	Настройка.Ключ          = "ДобавитьКомандыСоздатьНаОсновании";
	Настройка.ОписаниеТипов = Новый ОписаниеТипов("Булево");
	Настройка.ВидыПодключаемыхОбъектов = "Обработка";
	
КонецПроцедуры

// См. ПодключаемыеКомандыПереопределяемый.ПриОпределенииКомандПодключенныхКОбъекту.
Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	КомандыСоздатьНаОсновании = Команды.СкопироватьКолонки();
	КомандыСоздатьНаОсновании.Колонки.Добавить("Обработана", Новый ОписаниеТипов("Булево"));
	КомандыСоздатьНаОсновании.Индексы.Добавить("Обработана");
	
	СтандартнаяОбработка = Истина;
	ВводНаОснованииПоддержкаПроектовПереопределяемый.ПередДобавлениемКомандСоздатьНаОсновании(НастройкиФормы.ИмяФормы, КомандыСоздатьНаОсновании, СтандартнаяОбработка);
	КомандыСоздатьНаОсновании.ЗаполнитьЗначения(Истина, "Обработана");
	
	Если СтандартнаяОбработка Тогда
		Для Каждого Источник Из Источники.Строки Цикл
			
			Для Каждого ДокументРегистратор Из Источник.Строки Цикл
				ПриПолученииКомандСоздатьНаОснованииОбъекта(КомандыСоздатьНаОсновании, ДокументРегистратор, НастройкиФормы);
			КонецЦикла;
			
			ПриПолученииКомандСоздатьНаОснованииОбъекта(КомандыСоздатьНаОсновании, Источник, НастройкиФормы);
			
		КонецЦикла;
	КонецЕсли;
	
	ПодключенныеОбработки = ПодключенныеОтчетыИОбработки.НайтиСтроки(Новый Структура("ДобавитьКомандыСоздатьНаОсновании", Истина));
	Для Каждого ПодключенныйОбъект Из ПодключенныеОбработки Цикл
		ПриПолученииКомандСоздатьНаОснованииОбъекта(КомандыСоздатьНаОсновании, ПодключенныйОбъект, НастройкиФормы);
	КонецЦикла;
	
	Для Каждого КомандаСоздатьНаОсновании Из КомандыСоздатьНаОсновании Цикл
		
		Команда = Команды.Добавить();
		ЗаполнитьЗначенияСвойств(Команда, КомандаСоздатьНаОсновании);
		Команда.Вид = "СозданиеНаОсновании";
		Если Команда.Порядок = 0 Тогда
			Команда.Порядок = 50;
		КонецЕсли;
		
		Если Команда.МножественныйВыбор = Неопределено Тогда
			Команда.МножественныйВыбор = Ложь;
		КонецЕсли;
		
		Если Команда.РежимЗаписи = "" Тогда
			Команда.РежимЗаписи = "Проводить";
		КонецЕсли;
		
		Если ПустаяСтрока(Команда.ИмяФормы) И ПустаяСтрока(Команда.Обработчик) Тогда
			Команда.ИмяФормы = "ФормаОбъекта";
		КонецЕсли;
		
		Если ПустаяСтрока(Команда.ИмяПараметраФормы) Тогда
			Команда.ИмяПараметраФормы = "Основание";
		КонецЕсли;
		
		Если Команда.ПараметрыФормы = Неопределено Тогда
			Команда.ПараметрыФормы = Новый Структура;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Добавляет в список команды создания на основании по умолчанию
//
// Параметры:
//  ПолноеИмяОбъекта - Строка - полное имя объекта для которого нужно добавить команды создания на основании.
//  КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыСоздатьНаОсновании(ПолноеИмяОбъекта, КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводятсяНаОсновании = ПараметрыСеанса.ОбъектыВводимыеНаОсновании.Получить().Получить(ПолноеИмяОбъекта);
	Если ВводятсяНаОсновании = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Объект Из ВводятсяНаОсновании Цикл
		ДобавитьКомандуСоздатьНаОснованииОбъекта(Объект, КомандыСоздатьНаОсновании, НастройкиФормы);
	КонецЦикла;
	
КонецПроцедуры

// Добавляет команду создания объекта на основании
//
// Параметры:
//  Объект - Строка - полное имя объекта, как оно задано в конфигураторе.
//  КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
// Возвращаемое значение:
//  СтрокаТаблицыЗначений - добавленная команда.
//
Функция ДобавитьКомандуСоздатьНаОснованииОбъекта(Объект, КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Объект);
	Параметры = Новый Массив;
	Параметры.Добавить(КомандыСоздатьНаОсновании);
	Параметры.Добавить(НастройкиФормы);
	Команда = ОбщегоНазначенияПоддержкаПроектов.ВыполнитьНеобязательныйМетодОбъекта(МенеджерОбъекта, "ДобавитьКомандуСоздатьНаОсновании", Параметры, Истина);
	
	Если Команда = Неопределено Тогда
		МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(Объект);
		Команда = КомандыСоздатьНаОсновании.Добавить();
		Команда.Менеджер      = Объект;
		Команда.Представление = ОбщегоНазначенияПоддержкаПроектов.ПредставлениеОбъекта(МетаданныеОбъекта);
	КонецЕсли;
	
	Если ПустаяСтрока(Команда.ФункциональныеОпции) Тогда
		Команда.ФункциональныеОпции = ОбщегоНазначенияПоддержкаПроектовПовтИсп.ФункциональныеОпцииОбъекта(Объект);
	КонецЕсли;
	
	Возврат Команда;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область СлужебныйПрограммныйИнтерфейс

Процедура ПриПолученииКомандСоздатьНаОснованииОбъекта(КомандыСоздатьНаОсновании, СведенияОбОбъекте, НастройкиФормы)
	
	ПараметрыМетода = Новый Массив;
	ПараметрыМетода.Добавить(КомандыСоздатьНаОсновании);
	ПараметрыМетода.Добавить(НастройкиФормы);
	ОбщегоНазначенияПоддержкаПроектов.ВыполнитьНеобязательныйМетодОбъекта(СведенияОбОбъекте.Менеджер, "ДобавитьКомандыСоздатьНаОсновании", ПараметрыМетода);
	
	ДобавленныеКоманды = КомандыСоздатьНаОсновании.НайтиСтроки(Новый Структура("Обработана", Ложь));
	Для Каждого Команда Из ДобавленныеКоманды Цикл
		Если Не ЗначениеЗаполнено(Команда.Менеджер) Тогда
			Команда.Менеджер = СведенияОбОбъекте.ПолноеИмя;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Команда.ТипПараметра) Тогда
			ТипыДанных = Новый Массив;
			ПодключаемыеКоманды.ДополнитьМассивТипов(ТипыДанных, СведенияОбОбъекте.ТипСсылкиДанных);
			Команда.ТипПараметра = Новый ОписаниеТипов(ТипыДанных);
		КонецЕсли;
		Команда.Обработана = Истина;
	КонецЦикла;
	
КонецПроцедуры

// Устанавливает параметр сеанса для автоматического заполнения команд создания объектов на основании
//
Процедура УстановитьПараметрСеанса(ИмяПараметра, УстановленныеПараметры) Экспорт
	
	Если ИмяПараметра = "ОбъектыВводимыеНаОсновании" Тогда
		
		ОбъектыВводимыеНаОсновании = Новый Соответствие;
		
		СпискиМетаданных = Новый Массив;
		СпискиМетаданных.Добавить(Метаданные.Справочники);
		СпискиМетаданных.Добавить(Метаданные.Документы);
		СпискиМетаданных.Добавить(Метаданные.ПланыВидовХарактеристик);
		СпискиМетаданных.Добавить(Метаданные.ПланыОбмена);
		СпискиМетаданных.Добавить(Метаданные.БизнесПроцессы);
		СпискиМетаданных.Добавить(Метаданные.Задачи);
		
		Для Каждого СписокОбъектов Из СпискиМетаданных Цикл
			Для Каждого Объект Из СписокОбъектов Цикл
				Если Не ПравоДоступа("Добавление", Объект) Тогда
					Продолжить;
				КонецЕсли;
				Если Не Объект.ИспользоватьСтандартныеКоманды Тогда
					Продолжить;
				КонецЕсли;
				
				Для Каждого Основание Из Объект.ВводитсяНаОсновании Цикл
					
					ЯвляетсяОснованиемДля = ОбъектыВводимыеНаОсновании.Получить(Основание.ПолноеИмя());
					Если ЯвляетсяОснованиемДля = Неопределено Тогда
						ЯвляетсяОснованиемДля = Новый Массив;
					КонецЕсли;
					ЯвляетсяОснованиемДля.Добавить(Объект.ПолноеИмя());
					
					ОбъектыВводимыеНаОсновании.Вставить(Основание.ПолноеИмя(), ЯвляетсяОснованиемДля);
					
				КонецЦикла;
				
			КонецЦикла;
		КонецЦикла;
		
		УстановитьПривилегированныйРежим(Истина);
		ПараметрыСеанса.ОбъектыВводимыеНаОсновании = Новый ХранилищеЗначения(ОбъектыВводимыеНаОсновании);
		
		Если ТипЗнч(УстановленныеПараметры) = Тип("Структура") Тогда
			УстановленныеПараметры.Вставить("ОбъектыВводимыеНаОсновании");
		Иначе
			УстановленныеПараметры.Добавить("ОбъектыВводимыеНаОсновании");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
