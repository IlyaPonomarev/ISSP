#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Функция возвращает элемент таблицы доступных печатных форм объекта печати
//
Функция ДобавитьПечатнуюФорму(ПечатныеФормы) Экспорт
	
	МетаданныеМакета = МетаданныеМакета();
	МенеджерПечати = МетаданныеМакета.Родитель().ПолноеИмя();
	
	ПечатнаяФорма = УправлениеПечатьюПоддержкаПроектов.ДобавитьПечатнуюФорму(ПечатныеФормы, "ВедомостьВыдачиНФА_0504210", МенеджерПечати);
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормПоддержкаПроектов.ПутьКМакету(МетаданныеМакета);
	ПечатнаяФорма.Представление = МетаданныеМакета.Представление();
	
	УправлениеПечатьюПоддержкаПроектов.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	Возврат ПечатнаяФорма;
	
КонецФункции

// Функция формирует печатную форму требование накладная ф.0504204
//
Функция ПечатьВедомостьВыдачиНФА_0504210(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ПолноеИмяМакета = ФормированиеПечатныхФормПоддержкаПроектов.ПутьКМакету(МетаданныеМакета());
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПолноеИмяМакета;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПолноеИмяМакета);
	
	СтруктураТипов = ОбщегоНазначенияПоддержкаПроектов.РазложитьМассивСсылокПоТипам(МассивОбъектов);
	
	НомерТипаДокумента = 0;
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("ПолучатьЦены");
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечати(СтруктураОбъектов.Значение, ПараметрыПечати);
		
		СформироватьТабличныйДокумент(ТабличныйДокумент, Макет, ДанныеДляПечати, ОбъектыПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура СформироватьТабличныйДокумент(ТабличныйДокумент, Макет, ДанныеДляПечати, ОбъектыПечати)
	
	МассивВыводимыхОбластей = Новый Массив;
	
	ВалютаПечати = ЗначениеНастроекПоддержкаПроектовПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Шапка = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Получение параметров для заполнения
		ДанныеШапки = ПолучитьДанныеШапкиДокумента(Шапка);
		
		// Вывод области Утверждаю
		ФормированиеПечатныхФормПоддержкаПроектов.ВывестиОбластьСоШтрихкодом(ТабличныйДокумент, Макет, "Утверждаю", ДанныеШапки);
		
		// Вывод области Заголовок
		ФормированиеПечатныхФормПоддержкаПроектов.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Заголовок", ДанныеШапки);
		
		// Вывод области БухгалтерскаяЗапись
		ФормированиеПечатныхФормПоддержкаПроектов.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "БухгалтерскаяЗапись");
		
		// Вывод области Подписи
		ФормированиеПечатныхФормПоддержкаПроектов.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Подписи", ДанныеШапки);
		
		КоличествоСтрокДанных = 0;
		
		ВыборкаПоДокументам.Сбросить();
		ПараметрыПоиска = Новый Структура("Документ", Шапка.Ссылка);
		Если ВыборкаПоДокументам.НайтиСледующий(ПараметрыПоиска) Тогда
			ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();
			КоличествоСтрокДанных = ВыборкаСтрокТовары.Количество();
		КонецЕсли;
		
		КоличествоКолонок = 10;
		Граница = Макс(КоличествоКолонок, КоличествоСтрокДанных);
		
		ДанныеСтроки = Новый Структура;
		Для НомерСтроки = 1 По Граница Цикл
			
			НомерКолонки = НомерСтроки % КоличествоКолонок;
			
			Если НомерСтроки <= КоличествоСтрокДанных Тогда
				
				ВыборкаСтрокТовары.Следующий();
				
				ТоварНаименование = ОбщегоНазначенияПоддержкаПроектов.ПолучитьПредставлениеНоменклатурыДляПечати(
					ВыборкаСтрокТовары.ТоварНаименование,
					ВыборкаСтрокТовары.СерияНоменклатуры,
					,
					ВыборкаСтрокТовары.Описание);
				
				Суффикс = ?(НомерКолонки = 0, НомерСтроки, НомерКолонки);
				
				ДанныеСтроки.Вставить("ТоварНаименование" + Суффикс, ТоварНаименование);
				ДанныеСтроки.Вставить("ТоварКод"          + Суффикс, ВыборкаСтрокТовары.ТоварКод);
				ДанныеСтроки.Вставить("ЕдиницаИзмерения"  + Суффикс, ВыборкаСтрокТовары.ЕдиницаИзмерения);
				ДанныеСтроки.Вставить("КодПоОКЕИ"         + Суффикс, ВыборкаСтрокТовары.КодПоОКЕИ);
				ДанныеСтроки.Вставить("Количество"        + Суффикс, ВыборкаСтрокТовары.Количество);
				ДанныеСтроки.Вставить("Цена"              + Суффикс, ВыборкаСтрокТовары.Цена);
				ДанныеСтроки.Вставить("Сумма"             + Суффикс, ВыборкаСтрокТовары.Сумма);
				
			КонецЕсли;
			
			Если НомерКолонки = 0 Или НомерСтроки = Граница Тогда
				
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				ОбластьИтого = Макет.ПолучитьОбласть("Итого");
				
				ДанныеСтроки.Вставить("НомерСтроки", 1);
				
				ФормированиеПечатныхФормПоддержкаПроектов.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Шапка", ДанныеСтроки);
				
				ОбластьСтрока.Параметры.Заполнить(ДанныеШапки);
				ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
				МассивВыводимыхОбластей.Добавить(ОбластьИтого);
				
				Пока ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, МассивВыводимыхОбластей) Цикл
					ФормированиеПечатныхФормПоддержкаПроектов.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Строка");
				КонецЦикла;
				
				ФормированиеПечатныхФормПоддержкаПроектов.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Итого", ДанныеСтроки);
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ДанныеСтроки.Очистить();
				
			КонецЕсли;
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДанныеШапкиДокумента(Шапка)
	
	КлючиПараметров = ФормированиеПечатныхФормПоддержкаПроектов.ПолучитьИменаКолонокТаблицы(Шапка);
	
	Параметры = Новый Структура(КлючиПараметров);
	ЗаполнитьЗначенияСвойств(Параметры, Шапка);
	
	СведенияОбОрганизации    = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОрганизацияПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	
	ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.ДатаДокумента);
	МОЛОтправителя = РегистрыСведений.МатериальноОтветственныеЛица.ПолучитьДанныеОтветственного(Шапка.Склад, Шапка.ДатаДокумента);
	
	Параметры.Вставить("НомерДокумента"          , ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента));
	Параметры.Вставить("РуководительФИО"         , ОтветственныеЛица.РуководительНаименование);
	Параметры.Вставить("ОрганизацияПредставление", ОрганизацияПредставление);
	Параметры.Вставить("ОрганизацияОКПО"         , СведенияОбОрганизации.КодПоОКПО);
	Параметры.Вставить("МОЛОтветственный"        , МОЛОтправителя.Ответственный);
	Параметры.Вставить("МОЛФИО"                  , МОЛОтправителя.ФИО);
	Параметры.Вставить("МОЛДолжность"            , МОЛОтправителя.Должность);
	Параметры.Вставить("БухгалтерФИО"            , ОтветственныеЛица.ГлавныйБухгалтерНаименование);
	
	Возврат Параметры;
	
КонецФункции

Функция МетаданныеМакета()
	
	Возврат Метаданные.Обработки.ПечатьВедомостьВыдачиНФА_0504210.Макеты.ПФ_MXL_ВедомостьВыдачиНФА_0504210;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли
